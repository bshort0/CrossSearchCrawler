"http://ieeexplore.ieee.org/search/searchresult.jsp?download-format=download-csv&bulkSetSize=2000&matchBoolean%3Dtrue%26searchField%3DSearch_All_Text%26queryText%3D%28%28%28%28.QT.Number+of+States.QT.+OR+.QT.Num+of+States.QT.%29+AND+.QT.DFA.QT.%29+AND+.QT.Intrusion+Detection+System.QT.%29%29",2016/08/04 11:47:11,"((((Number of States) OR Num of States) AND DFA) AND Intrusion Detection System)",IEEE
"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Year","Volume","Issue","Start Page","End Page","Abstract","ISSN","ISBN","EISBN","DOI",PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","MeSH Terms",Article Citation Count,Patent Citation Count,"Reference Count","Copyright Year","Online Date",Issue Date,"Meeting Date","Publisher",Document Identifier
"Multipattern string matching on a GPU","X. Zha; S. Sahni","Computer and Information Science and Engineering, University of Florida, Gainesville, FL 32611","Computers and Communications (ISCC), 2011 IEEE Symposium on","20110818","2011","","","277","282","We develop GPU adaptations of the Aho-Corasick string matching algorithm for the the case when all data reside initially in the GPU memory and the results are to be left in this memory. We consider several refinements to a base GPU implementation and measure the performance gain from each refinement. Experiments conducted on an NVIDIA Tesla GT200 GPU that has 240 cores running off of a Xeon 2.8GHz quad-core host CPU show that our Aho-Corasick GPU adaptation achieves a speedup between 8.5 and 9.5 relative to a single-thread CPU implementation and between 2.4 and 3.2 relative to the best multithreaded implementation.","1530-1346;15301346","978-1-4577-0680-6;9781457706806","978-1-4577-0678-3;9781457706783","10.1109/ISCC.2011.5983790","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5983790","Aho-Corasick;CUDA;GPU;Multipattern string matching","Arrays;Bandwidth;Doped fiber amplifiers;Graphics processing unit;Instruction sets;Memory management;Registers","computer graphic equipment;coprocessors;multi-threading;multiprocessing systems;string matching","Aho-Corasick string matching algorithm;GPU memory;NVIDIA Tesla GT200 GPU;Xeon 2.8GHz quad core host CPU;multipattern string matching;multithreaded implementation;single thread CPU implementation","","6","","17","","","June 28 2011-July 1 2011","","IEEE","IEEE Conference Publications"
"Accelerating Multipattern Matching on Compressed HTTP Traffic","A. Bremler-Barr; Y. Koral","Efi Arazi School of Computer Science, The Interdisciplinary Center, Herzlia, Israel","IEEE/ACM Transactions on Networking","20120612","2012","20","3","970","983","Current security tools, using “signature-based” detection, do not handle compressed traffic, whose market-share is constantly increasing. This paper focuses on compressed HTTP traffic. HTTP uses GZIP compression and requires some kind of decompression phase before performing a string matching. We present a novel algorithm, Aho-Corasick-based algorithm for Compressed HTTP (ACCH), that takes advantage of information gathered by the decompression phase in order to accelerate the commonly used Aho-Corasick pattern-matching algorithm. By analyzing real HTTP traffic and real Web application firewall signatures, we show that up to 84% of the data can be skipped in its scan. Surprisingly, we show that it is faster to perform pattern matching on the compressed data, with the penalty of decompression, than on regular traffic. As far as we know, we are the first paper that analyzes the problem of “on-the-fly” multipattern matching on compressed HTTP traffic and suggest a solution.","1063-6692;10636692","","","10.1109/TNET.2011.2172456","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6062397","Compressed HTTP;computer security;intrusion detection;pattern matching","Acceleration;Browsers;Dictionaries;Doped fiber amplifiers;Memory management;Pattern matching;Security","Internet;authorisation;computer network security;data compression;hypermedia;string matching;telecommunication traffic;transport protocols","ACCH;Aho-Corasick-based algorithm for Compressed HTTP;GZIP compression;compressed HTTP traffic;data compression;decompression phase;market-share;multipattern matching acceleration;pattern matching;real Web application firewall signatures;security tools;signature-based detection;string matching","","4","","34","","2011-10-27","June 2012","","IEEE","IEEE Journals & Magazines"
"An efficient hardware architecture for deep packet inspection in hybrid intrusion detection systems","M. A. Taherkhani; M. Abbaspour","Department of Electrical and Computer Engineering Shahid Beheshti University Tehran, Iran","Communications and Networking in China, 2009. ChinaCOM 2009. Fourth International Conference on","20091120","2009","","","1","6","Intrusion Detection Systems are known as important security components to establish a protection mechanism for computer and network related resources. By increasing speed of computer networks, and also increasing number of incidents and complexity of attacks; IDSs need to intelligently process the inputs with high performance and precision. A key idea could be an implementation of hardware modules for some components of IDS. In this paper, an efficient hardware architecture is proposed for Network based Intrusion Detection Systems which able to detect known attacks and anomaly behavior over application protocols. Minimum time complexity, low storage cost and improved accuracy and correctness are some key features of the proposed IDS.","","978-1-4244-4337-6;9781424443376","978-1-4244-4337-6;9781424443376","10.1109/CHINACOM.2009.5339840","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5339840","","Computer architecture;Computer networks;Computer security;Costs;Hardware;Inspection;Intelligent networks;Intrusion detection;Protection;Protocols","security of data","anomaly detection;attack detection;computer networks;deep packet inspection;hardware architecture;hybrid intrusion detection systems","","0","","24","","","26-28 Aug. 2009","","IEEE","IEEE Conference Publications"
"Dynamical System Theory for the Detection of Anomalous Behavior in Computer Programs","N. Kanaskar; R. Seker; J. Bian; V. V. Phoha","University of Arkansas at Little Rock, Little Rock, USA","IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)","20121221","2012","42","6","1579","1589","Code injection is a common approach which is utilized to exploit applications. We introduce some of the well-established techniques and formalisms of dynamical system theory into analysis of program behavior via system calls to detect code injections into an applications execution space. We accept a program as a blackbox dynamical system whose internals are not known, but whose output we can observe. The blackbox system observable in our model is the system calls the program makes. The collected system calls are treated as signals which are used to reconstruct the system's phase space. Then, by using the well-established techniques from dynamical system theory, we quantify the amount of complexity of the system's (program's) behavior. The change in the behavior of a compromised system is detected as anomalous behavior compared with the baseline established from a clean program. We test the proposed approach against DARPA-98 dataset and a real-world exploit and present code injection experiments to show the applicability of our approach.","1094-6977;10946977","","","10.1109/TSMCC.2012.2208187","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6392448","Anomalous behavior;approximate entropy;central tendency measure (CTM) dynamical system;intrusion detection;percent determinism;percent ratio;percent recurrence;recurrence plots;system call sequence","Complexity theory;Entropy;Malware;Time series analysis","invasive software;systems analysis","DARPA-98 dataset;anomalous behavior detection;applications execution space;blackbox dynamical system;code injection detection;computer program;dynamical system theory;program behavior analysis;system call","","0","","28","","","Nov. 2012","","IEEE","IEEE Journals & Magazines"
"Efficient Pattern Matching Algorithm for Memory Architecture","C. H. Lin; S. C. Chang","Dept. of Ind. Technol. Educ., Nat. Taiwan Normal Univ., Taipei, Taiwan","IEEE Transactions on Very Large Scale Integration (VLSI) Systems","20101223","2011","19","1","33","41","Network intrusion detection system is used to inspect packet contents against thousands of predefined malicious or suspicious patterns. Because traditional software alone pattern matching approaches can no longer meet the high throughput of today's networking, many hardware approaches are proposed to accelerate pattern matching. Among hardware approaches, memory-based architecture has attracted a lot of attention because of its easy reconfigurability and scalability. In order to accommodate the increasing number of attack patterns and meet the throughput requirement of networks, a successful network intrusion detection system must have a memory-efficient pattern-matching algorithm and hardware design. In this paper, we propose a memory-efficient pattern-matching algorithm which can significantly reduce the memory requirement. For Snort rule sets, the new algorithm achieves 21% of memory reduction compared with the traditional Aho-Corasick algorithm. In addition, we can gain 24% of memory reduction by integrating our approach to the bit-split algorithm which is the state-of-the-art memory-based approach.","1063-8210;10638210","","","10.1109/TVLSI.2009.2028346","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5272427","Aho–Corasick (AC) algorithm;finite automata;pattern matching","Acceleration;Algorithm design and analysis;Computer architecture;Decoding;Hardware;Intrusion detection;Memory architecture;Pattern matching;Scalability;Throughput","memory architecture;pattern matching;security of data","Snort rule sets;bit-split algorithm;hardware design;memory architecture;memory reduction;network intrusion detection system;packet content inspection;pattern matching algorithm;pattern matching approach","","3","","30","","2009-09-29","Jan. 2011","","IEEE","IEEE Journals & Magazines"
"A Deterministic Cost-effective String Matching Algorithm for Network Intrusion Detection System","N. F. Huang; Y. M. Chu; C. Y. Hsieh; C. H. Tsai; Y. J. Tzang","Nat. Tsing-Hua Univ., Hsinchu","2007 IEEE International Conference on Communications","20070813","2007","","","1292","1297","Network intrusion detection systems (NIDS) are more and more important in today's network security for identifying and preventing malicious attacks over the network. This paper proposes a novel and effective string matching algorithm (named ACMS) with advantages of both compact memory and high performance. By employing the characteristics of magic states observed from the deterministic finite state automata, the proposed ACMS significantly reduces the memory requirement without sacrificing high speed no matter it is implemented in software or hardware. The ACMS algorithm also provides high flexibility that it can be tuned to fit specific performance requirement and resource constraints. The experimental results show that the performance of ACMS is over 3.5 times in hardware implementation and 21 times in software implementation better than that of the state-of-the-art studies.","1550-3607;15503607","1-4244-0353-7;1424403537","","10.1109/ICC.2007.218","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4288889","","Algorithm design and analysis;Communications Society;Computer science;Data structures;Hardware;Inspection;Intrusion detection;Pattern matching;Payloads;Software performance","deterministic automata;finite state machines;security of data;string matching;telecommunication security","deterministic cost-effective string matching algorithm;deterministic finite state automata;magic state algorithm;malicious attack;network intrusion detection system;network security","","1","","17","","","24-28 June 2007","","IEEE","IEEE Conference Publications"
"DFA-Based Regular Expression Matching on Compressed Traffic","Y. Sun; M. S. Kim","Sch. of Electr. Eng. & Comput. Sci., Washington State Univ., Pullman, WA, USA","2011 IEEE International Conference on Communications (ICC)","20110728","2011","","","1","5","Many network security applications in today's networks are based on deep packet inspection, checking not only the header portion but also the payload portion of a packet. For example, traffic monitoring, layer-7 filtering, and network intrusion detection all require an accurate analysis of packet content in search for predefined patterns to identify specific classes of applications, viruses, attack signatures, etc. Regular expressions are often used to represent such patterns. They are implemented using finite automata, which take the payload of a packet as an input string. However, existing approaches, both non-deterministic finite automata (NFA) and deterministic finite automata (DFA), do not deal with compressed traffic, which becomes more and more popular in HTTP applications. In this paper, we propose an efficient algorithm for regular expression matching to implement deep packet inspection on compressed traffic. Based on the observations of DFA, we design a scheme to skip most of the matching process in the compressed parts of traffic. To the best of our knowledge, this is the first effort to design an efficient regular expression matching on compressed traffic. We evaluate our algorithm using rule sets provided by Snort, a popular open-source intrusion detection system. The evaluation results show that our approach can reduce the number of state access in the DFA significantly.","1550-3607;15503607","978-1-61284-232-5;9781612842325","978-1-61284-231-8;9781612842318","10.1109/icc.2011.5962596","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5962596","","Automata;Computers;Doped fiber amplifiers;Inspection;Intrusion detection;Pattern matching;Payloads","computer network security;deterministic automata;finite automata","DFA-based regular expression matching;Snort;compressed traffic;deep packet inspection;layer-7 filtering;network intrusion detection;network security;nondeterministic finite automata;open-source intrusion detection system;rule sets;traffic monitoring","","1","","25","","","5-9 June 2011","","IEEE","IEEE Conference Publications"
"Compact DFA Structure for Multiple Regular Expressions Matching","W. Lin; Y. Tang; B. Liu; D. Pao; X. Wang","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China","2009 IEEE International Conference on Communications","20090811","2009","","","1","5","New applications such as real-time deep packet inspection require high-speed regular expression (regex) matcher, and the number of regexes in pattern store is increasing to several thousands, which requires a memory efficient solution. In this paper, a kind of hardware based compact DFA structure for multiple regexes matching called CPDFA is presented. According to statistics of regexes in Snort and L7-filter rules, transitions from each state to its next states are not evenly distributed. The summation of transitions from each state to its top three most popular next states takes about 90% of all the transitions. Therefore, CPDFA employs an indirect index table to represent transitions to top three most popular next states more efficiently. The remaining transitions which take about 10% of all the transitions are stored in direct transition table or K parallel SRAMs according to the number of remaining transitions from the same state is more than K or not. Simulation shows that CPDFA structure can save about 90% of memory storage comparing with the original DFA structure. By using pipelined architecture in FPGA, CPDFA can advance one character in one memory access cycle.","1550-3607;15503607","978-1-4244-3435-0;9781424434350","978-1-4244-3435-0;9781424434350","10.1109/ICC.2009.5198833","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5198833","","Application software;Communications Society;Computer science;Doped fiber amplifiers;Field programmable gate arrays;Inspection;Intrusion detection;Paper technology;Pattern matching;Throughput","field programmable gate arrays;security of data;telecommunication security","DFA Structure;deterministic finite automata;indirect index;multiple regular expressions matching;parallel SRAMs;real-time deep packet inspection;regular expression matcher","","1","","13","","","14-18 June 2009","","IEEE","IEEE Conference Publications"
"Speculative Parallel Pattern Matching","D. Luchaup; R. Smith; C. Estan; S. Jha","Department of Computer Sciences, University of Wisconsin, Madison, WI, USA","IEEE Transactions on Information Forensics and Security","20110516","2011","6","2","438","451","Intrusion prevention systems (IPSs) determine whether incoming traffic matches a database of signatures, where each signature is a regular expression and represents an attack or a vulnerability. IPSs need to keep up with ever-increasing line speeds, which has lead to the use of custom hardware. A major bottleneck that IPSs face is that they scan incoming packets one byte at a time, which limits their throughput and latency. In this paper, we present a method to search for arbitrary regular expressions by scanning multiple bytes in parallel using speculation. We break the packet in several chunks, opportunistically scan them in parallel, and if the speculation is wrong, correct it later. We present algorithms that apply speculation in single-threaded software running on commodity processors as well as algorithms for parallel hardware. Experimental results show that speculation leads to improvements in latency and throughput in both cases.","1556-6013;15566013","","","10.1109/TIFS.2011.2112647","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5710582","Low latency;multibyte;multibyte matching;parallel pattern matching;parallel regular expression matching;regular expressions;speculative pattern matching","Couplings;Doped fiber amplifiers;Hardware;History;Pattern matching;Software algorithms;Throughput","database management systems;pattern matching;security of data","IPS;intrusion prevention systems;parallel hardware;speculative parallel pattern matching","","7","","33","","2011-02-10","June 2011","","IEEE","IEEE Journals & Magazines"
"Scalable Lookahead Regular Expression Detection System for Deep Packet Inspection","M. Bando; N. S. Artan; H. J. Chao","Department of Electrical and Computer Engineering, Polytechnic Institute of New York University, Brooklyn, NY, USA","IEEE/ACM Transactions on Networking","20120612","2012","20","3","699","714","Regular expressions (RegExes) are widely used, yet their inherent complexity often limits the total number of RegExes that can be detected using a single chip for a reasonable throughput. This limit on the number of RegExes impairs the scalability of today's RegEx detection systems. The scalability of existing schemes is generally limited by the traditional detection paradigm based on per-character-state processing and state transition detection. The main focus of existing schemes is on optimizing the number of states and the required transitions, but not on optimizing the suboptimal character-based detection method. Furthermore, the potential benefits of allowing out-of-sequence detection, instead of detecting components of a RegEx in the order of appearance, have not been explored. Lastly, the existing schemes do not provide ways to adapt to the evolving RegExes. In this paper, we propose Lookahead Finite Automata (LaFA) to perform scalable RegEx detection. LaFA requires less memory due to these three contributions: 1) providing specialized and optimized detection modules to increase resource utilization; 2) systematically reordering the RegEx detection sequence to reduce the number of concurrent operations; 3) sharing states among automata for different RegExes to reduce resource requirements. Here, we demonstrate that LaFA requires an order of magnitude less memory compared to today's state-of-the-art RegEx detection systems. Using LaFA, a single-commodity field programmable gate array (FPGA) chip can accommodate up to 25&nbsp; 000 (25 k) RegExes. Based on the throughput of our LaFA prototype on FPGA, we estimate that a 34-Gb/s throughput can be achieved.","1063-6692;10636692","","","10.1109/TNET.2011.2181411","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6134694","DPI;Deep packet inspection;LaFA;Lookahead Finite Automata;NIDPS;network intrusion detection and prevention system;regular expressions","Automata;Complexity theory;Correlation;Data structures;Doped fiber amplifiers;Memory management;Timing","computer network security;field programmable gate arrays;finite automata;inspection","FPGA chip;LaFA;RegEx detection systems;bit rate 34 Gbit/s;deep packet inspection;lookahead finite automata;network intrusion detection;per-character-state processing;scalable lookahead regular expression detection system;single-commodity field programmable gate array;state transition detection;suboptimal character-based detection method","","5","","34","","2012-01-18","June 2012","","IEEE","IEEE Journals & Magazines"
"A regular expressions matching algorithm based on templates finite automata","Y. Li; X. Luo; X. Shao; D. Wei","Nat. Digital Switching Syst. Eng. & Technol. Res. Center, Zhengzhou, China","Information and Communication Technology Convergence (ICTC), 2015 International Conference on","20151217","2015","","","1058","1063","When applying the method of the grouping rules to the problem of state explosion of the Deterministic Finite Automata (DFA), the efficiency of space compression significantly decreases with the increase of the quantity of the rules. Therefore, the paper proposes the Templates Finite Automata Grouping Algorithm (TFA), which divides rule sets into different groups based on templates of the rules. Each group is used to construct its corresponding matching engine. At the meantime, the number of rule subsets is altered according to the quantity of actual rules and the structure of a system to achieve better matching efficiency. Theoretical analysis and the experiments conducted indicate that comparing with the conventional grouping algorithms, the TFA requires far fewer groups at the relatively similar level of storage space compression; and comparing with other classical DFA improved algorithms, the TFA achieves shorter pretreatment time and demands smaller storage space with no noticeably decrease in the matching efficiency.","","","","10.1109/ICTC.2015.7354737","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7354737","deterministic finite automata;grouping algorithm;regular expression;rule templates;templates finite automata","Algorithm design and analysis;Automata;Bandwidth;Complexity theory;Engines;Explosions;Switches","deterministic automata;finite automata;formal languages;security of data","DFA;TFA;deterministic finite automata;intrusion detection system;regular expression matching algorithm;template finite automata grouping algorithm","","","","13","","","28-30 Oct. 2015","","IEEE","IEEE Conference Publications"
"Book of abstracts","","","Decision and Control, 2009 held jointly with the 2009 28th Chinese Control Conference. CDC/CCC 2009. Proceedings of the 48th IEEE Conference on","20100129","2009","","","","","Summary form only given. Provides an abstract for each of the presentations in the conference proceedings.","0191-2216;01912216","978-1-4244-3871-6;9781424438716","","10.1109/CDC.2009.5399675","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5399675","","","","","","0","","","","","15-18 Dec. 2009","","IEEE","IEEE Conference Publications"
"Peak-Performance DFA-based String Matching on the Cell Processor","D. P. Scarpazza; O. Villa; F. Petrini","Pacific Northwest National Laboratory, Computational & Information Sciences Division, Richland, WA 99352 USA. daniele.scarpazza@pnl.gov","2007 IEEE International Parallel and Distributed Processing Symposium","20070611","2007","","","1","8","The security of your data and of your network is in the hands of intrusion detection systems, virus scanners and spam filters, which are all critically based on string matching. But network links are getting faster and faster, and string matching is getting more and more difficult to perform in real time. Traditional processors are not keeping up with the performance demands, whereas specialized hardware will never be able to compete with commodity hardware in terms of cost effectiveness, reusability and ease of programming. Advanced multi-core architectures like the IBM Cell Broadband Engine promise unprecedented performance at a low cost, thanks to their popularity and production volume. Nevertheless, the suitability of the cell processor to string matching has not been investigated so far. In this paper we investigate the performance attainable by the cell processor when employed for string matching algorithms based on deterministic finite-state automata (DFA). Our findings show that the cell is an ideal candidate to tackle modern security needs: two processing elements alone, out of the eight available on one cell processor provide sufficient computational power to filter a network link with bit rates in excess of 10 Gbps.","1530-2075;15302075","1-4244-0909-8;1424409098","1-4244-0910-1;1424409101","10.1109/IPDPS.2007.370634","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4228362","","Automata;Computer networks;Costs;Data security;Doped fiber amplifiers;Engines;Hardware;Intrusion detection;Matched filters;Production","cellular automata;deterministic automata;finite state machines;security of data;string matching","IBM Cell Broadband Engine;cell processor;deterministic finite-state automata;intrusion detection system;multicore architecture;string matching","","12","","18","","","26-30 March 2007","","IEEE","IEEE Conference Publications"
"Finite State Machine Parsing for Internet Protocols: Faster Than You Think","R. D. Graham; P. C. Johnson","","Security and Privacy Workshops (SPW), 2014 IEEE","20141120","2014","","","185","190","A parser's job is to take unstructured, opaque data and convert it to a structured, semantically meaningful format. As such, parsers often operate at the border between untrusted data sources (e.g., the Internet) and the soft, chewy center of computer systems, where performance and security are paramount. A firewall, for instance, is precisely a trust-creating parser for Internet protocols, permitting valid packets to pass through and dropping or actively rejecting malformed packets. Despite the prevalence of finite state machines (FSMs) in both protocol specifications and protocol implementations, they have gained little traction in parser code for such protocols. Typical reasons for avoiding the FSM computation model claim poor performance, poor scalability, poor expressibility, and difficult or time-consuming programming. In this research report, we present our motivations for and designs of finite state machines to parse a variety of existing Internet protocols, both binary and ASCII. Our hand-written parsers explicitly optimize around L1 cache hit latency, branch misprediction penalty, and program-wide memory overhead to achieve aggressive performance and scalability targets. Our work demonstrates that such parsers are, contrary to popular belief, sufficiently expressive for meaningful protocols, sufficiently performant for high-throughput applications, and sufficiently simple to construct and maintain. We hope that, in light of other research demonstrating the security benefits of such parsers over more complex, Turing-complete codes, our work serves as evidence that certain ``practical'' reasons for avoiding FSM-based parsers are invalid.","","","","10.1109/SPW.2014.34","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6957302","","Automata;Internet;Pipelines;Program processors;Protocols;Servers;Switches","Internet;finite state machines;protocols","FSM;Internet protocols;L1 cache hit latency;branch misprediction penalty;finite state machine parsing;program-wide memory overhead;protocol implementations;protocol specifications","","0","","9","","","17-18 May 2014","","IEEE","IEEE Conference Publications"
"StriFA: Stride Finite Automata for High-Speed Regular Expression Matching in Network Intrusion Detection Systems","X. Wang; Y. Xu; J. Jiang; O. Ormond; B. Liu; X. Wang","Department of Computer Science and Technology, Tsinghua University, Beijing, China","IEEE Systems Journal","20130704","2013","7","3","374","384","Deep packet inspection has become a key component in network intrusion detection systems (NIDSes), where every packet in the incoming data stream needs to be compared with patterns in an attack database, byte-by-byte, using either string matching or regular expression matching. Regular expression matching, despite its flexibility and efficiency in attack identification, brings significantly high computation and storage complexities to NIDSes, making line-rate packet processing a challenging task. In this paper, we present stride finite automata (StriFA), a novel finite automata family, to accelerate both string matching and regular expression matching. Different from conventional finite automata, which scan the entire traffic stream to locate malicious information, a StriFA only needs to scan a partial traffic stream to find suspicious information. The presented StriFA technique has been implemented in software and evaluated based on different traces. The simulation results show that the StriFA acceleration scheme offers an increased speed over traditional nondeterministic finite automaton/deterministic finite automaton, while at the same time reducing the memory requirement.","1932-8184;19328184","","","10.1109/JSYST.2013.2244791","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6475958","Deep packet inspection (DPI);deterministic finite automaton (DFA);network intrusion detection systems (NIDSes);nondeterministic finite automaton (NFA)","Acceleration;Automata;Doped fiber amplifiers;Educational institutions;Engines;Memory management;Pattern matching","finite automata;security of data;string matching","NIDS;StriFA acceleration scheme;attack database;attack identification;data stream;high-speed regular expression matching;line-rate packet processing;malicious information;network intrusion detection systems;stride finite automata;string matching;traffic stream","","2","","31","","2013-03-07","Sept. 2013","","IEEE","IEEE Journals & Magazines"
"Reorganized and Compact DFA for Efficient Regular Expression Matching","K. Wang; Y. Qi; Y. Xue; J. Li","Dept. of Autom., Tsinghua Univ., Beijing, China","2011 IEEE International Conference on Communications (ICC)","20110728","2011","","","1","5","Regular expression matching has become a critical yet challenging technique in content-aware network processing, such as application identification and deep inspection. To meet the requirement for processing heavy network traffic at line rate, Deterministic Finite Automata (DFA) is widely used to accelerate regular expression matching at the expense of large memory usage. In this paper, we propose a DFA-based algorithm named RCDFA (Reorganized and Compact DFA), which dramatically reduces the memory usage while maintaining fast and deterministic lookup speed. Based on the dissection of real-life DFA tables, we observe that almost every state has multiple similar states, i.e. they share identical next-state transitions for most input characters. However, these similar states often distribute at nonadjacent positions in the original DFA table. RCDFA aims at reorganizing all similar states into adjacent entries, so that identical transitions become consecutive along the state dimension, then compresses the reorganized DFA table utilizing bitmap technique. Coupled with mapping along the character dimension, RCDFA is not only efficient in DFA compression, but also effective for hardware implementation. Experiment results show, RCDFA has superior performance in terms of high processing speed, low memory usage and short preprocessing time. RCDFA consistently achieves over 95% compression ratio for existing real-life rule sets. Implemented in a single Xilinx Virtex-6 FPGA platform, RCDFA matching engine achieved 12Gbps throughput.","1550-3607;15503607","978-1-61284-232-5;9781612842325","978-1-61284-231-8;9781612842318","10.1109/icc.2011.5963291","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5963291","","Doped fiber amplifiers;Engines;Field programmable gate arrays;Hardware;Inspection;Pattern matching;Throughput","computer networks;field programmable gate arrays;finite automata;telecommunication traffic","Xilinx Virtex-6 FPGA platform;bitmap technique;content aware network processing;deterministic finite automata;next state transitions;regular expression matching;reorganized and compact DFA","","3","","17","","","5-9 June 2011","","IEEE","IEEE Conference Publications"
"Hardware architecture for the fast pattern matching","J. Kastil; V. Kosar; J. Korenek","Faculty of Information Technology, Brno University of Technology, Czech Republic","Design and Diagnostics of Electronic Circuits & Systems (DDECS), 2013 IEEE 16th International Symposium on","20130701","2013","","","120","123","As the speed of current computer networks increases, it is necessary to protect networks by security systems such as firewalls and Intrusion Detection Systems (IDS) operating at multigigabit speeds. As attacks on modern networks became more and more complex, it is necessity to detect attack placed not only in single packet but at the level of network flows. Pattern matching in the network flows is the time-critical operation of many modern IDS. Most of the regularly used patterns are described by the regular expression. This work describes advanced hardware architecture for the fast regular expression matching based on the perfect hashing. The proposed architecture is scalable and can achieve multigigabit throughput per network flow.","","978-1-4673-6135-4;9781467361354","978-1-4673-6134-7;9781467361347","10.1109/DDECS.2013.6549801","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6549801","","Automata;Clocks;Computer architecture;Context;Hardware;Pattern matching;Throughput","computer network security;pattern matching","IDS;advanced hardware architecture;attack detection;computer networks;fast pattern matching;fast regular expression matching;firewalls;intrusion detection systems;multigigabit speeds;multigigabit throughput;network flow level;perfect hashing;security systems","","0","","16","","","8-10 April 2013","","IEEE","IEEE Conference Publications"
"A memory efficient FPGA-based pattern matching engine for stateful NIDS","Tran Trung Hieu; N. T. Tran","Fac. of Comput. Sci. & Eng., HCMC Univ. of Technol., Ho Chi Minh City, Vietnam","2013 Fifth International Conference on Ubiquitous and Future Networks (ICUFN)","20130930","2013","","","252","257","Pattern matching task plays an important role in network security applications especially Network Intrusion Detection System (NIDS). The limitation of matching throughput on general purpose processor gives rise to implementation of the task on FPGA. In this paper, we introduce a memory efficient FPGA-based pattern matching engine. We bases on Deterministic Finite Automata (DFA) and propose some modifications to reduce redundant logic. The proposed design, with better memory utilization, is capable of dynamic update and compatible to stateful NIDS. The analysis of memory efficiency and the hardware implementation of proposed design are also provided in this paper. We experiment our approach on contemporary NIDS pattern sets and build a prototype to test on real network environment. The results show that our design could save up to 90% hardware resources compare to traditional approach. The matching engine is compatible to gigabit network and could achieve 2.7-3.2x speed up to software-based matching engine.","2165-8528;21658528","","","10.1109/ICUFN.2013.6614821","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6614821","DFA;FPGA;FSM;NIDS;pattern matching","Engines;Field programmable gate arrays;Indexes","deterministic automata;field programmable gate arrays;finite state machines;pattern matching;security of data","DFA;FPGA-based pattern matching engine;NIDS;deterministic finite automata;general purpose processor;gigabit network;hardware implementation;memory efficiency;network intrusion detection system;network security applications;redundant logic","","1","","14","","","2-5 July 2013","","IEEE","IEEE Conference Publications"
"Fast and Memory-Efficient Traffic Classification with Deep Packet Inspection in CMP Architecture","T. Liu; Y. Sun; L. Guo","Inst. of Comput. Technol., Chinese Acad. of Sci., Beijing, China","Networking, Architecture and Storage (NAS), 2010 IEEE Fifth International Conference on","20100916","2010","","","208","217","Traffic classification is important to many network applications, such as network monitoring. The classic way to identify flows, e.g., examining the port numbers in the packet headers, becomes ineffective. In this context, deep packet inspection technology, which does not only inspect the packet headers but also the packet payloads, plays a more important role in traffic classification. Meanwhile regular expressions are replacing strings to represent patterns because of their expressive power, simplicity and flexibility. However, regular expressions mathcing technique causes a high memory usage and processing cost, which result in low throughout. In this paper, we analyze the application-level protocol distribution of network traffic and conclude its characteristic. Furthermore, we design a fast and memory-efficient system of a two-layer architecture for traffic classification with the help of regular expressions in multi-core architecture, which is different from previous one-layer architecture. In order to reduce the memory usage of DFA, we use a compression algorithm called CSCA to perform regular expressions matching, which can reduce 95% memory usage of DFA. We also introduce some optimizations to accelerate the matching speed. We use real-world traffic and all L7-filter protocol patterns to make our experiments, and the results show that the system achieves at Gbps level throughout in 4-cores Servers.","","978-1-4244-8133-0;9781424481330","","10.1109/NAS.2010.43","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5575653","","Computer architecture;Doped fiber amplifiers;Inspection;Instruction sets;Message systems;Payloads;Protocols","telecommunication traffic;transport protocols","CMP architecture;L7-filter protocol patterns;application-level protocol distribution of network traffic;deep packet inspection technology;fast traffic classification;memory-efficient traffic classification","","3","","25","","","15-17 July 2010","","IEEE","IEEE Conference Publications"
"Regular expression matching for reconfigurable packet inspection","J. Bispo; I. Sourdis; J. M. P. Cardoso; S. Vassiliadis","Fac. of Sci. & Technol., Algarve Univ., Faro","2006 IEEE International Conference on Field Programmable Technology","20070102","2006","","","119","126","Recent intrusion detection systems (IDS) use regular expressions instead of static patterns as a more efficient way to represent hazardous packet payload contents. This paper focuses on regular expressions pattern matching engines implemented in reconfigurable hardware. A nondeterministic finite automata (NFA) based implementation was presented, which takes advantage of new basic building blocks to support more complex regular expressions than the previous approaches. The methodology is supported by a tool that automatically generates the circuitry for the given regular expressions, outputting VHDL representations ready for logic synthesis. Furthermore, techniques to reduce the area cost of our designs and maximize performance when targeting FPGAs were included. Experimental results show that our tool is able to generate a regular expression engine to match more than 500 IDS regular expressions (from the Snort ruleset) using only 25K logic cells and achieving 2 Gbps throughput on a Virtex2 and 2.9 on a Virtex4 device. Concerning the throughput per area required per matching non-meta character, our design is 3.4 and 10 times more efficient than previous ASIC and FPGA approaches, respectively","","0-7803-9728-2;0780397282","0-7803-9729-0;0780397290","10.1109/FPT.2006.270302","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4042424","","Automata;Circuits;Engines;Field programmable gate arrays;Hardware;Inspection;Intrusion detection;Pattern matching;Payloads;Throughput","field programmable gate arrays;finite automata;hardware description languages;logic design;pattern matching;security of data","FPGA;Snort ruleset;VHDL;Virtex;expression matching;intrusion detection systems;logic synthesis;nondeterministic finite automata;nonmeta character;reconfigurable hardware;reconfigurable packet inspection;regular expressions pattern matching engines;static patterns","","24","3","19","","","Dec. 2006","","IEEE","IEEE Conference Publications"
"Bypassing Space Explosion in High-Speed Regular Expression Matching","J. Patel; A. X. Liu; E. Torng","Department of Computer Science and Engineering, Michigan State University, East Lansing","IEEE/ACM Transactions on Networking","20141218","2014","22","6","1701","1714","Network intrusion detection and prevention systems commonly use regular expression (RE) signatures to represent individual security threats. While the corresponding deterministic finite state automata (DFA) for any one RE is typically small, the DFA that corresponds to the entire set of REs is usually too large to be constructed or deployed. To address this issue, a variety of alternative automata implementations that compress the size of the final automaton have been proposed such as extended finite automata (XFA) and delayed input DFA (D <sup>2</sup>FA). The resulting final automata are typically much smaller than the corresponding DFA. However, the previously proposed automata construction algorithms do suffer from some drawbacks. First, most employ a “Union then Minimize” framework where the automata for each RE are first joined before minimization occurs. This leads to an expensive nondeterministic finite automata (NFA) to DFA subset construction on a relatively large NFA. Second, most construct the corresponding large DFA as an intermediate step. In some cases, this DFA is so large that the final automaton cannot be constructed even though the final automaton is small enough to be deployed. In this paper, we propose a “Minimize then Union” framework for constructing compact alternative automata focusing on the D <sup>2</sup>FA. We show that we can construct an almost optimal final D <sup>2</sup>FA with small intermediate parsers. The key to our approach is a space- and time-efficient routine for merging two compact D <sup>2</sup>FA into a compact D <sup>2</sup>FA. In our experiments, our algorithm runs on average 155 times faster and uses 1500 times less memory than previous algorithms. For example, we are able to construct a D <sup>2</sup>FA with over 80 000 000 states using only 1 GB of main memory in only 77 min.","1063-6692;10636692","","","10.1109/TNET.2014.2309014","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6807837","Deep packet inspection;information security;intrusion detection and prevention;network security;regular expression matching","Automata;Explosions;Intrusion detection;Memory management;Minimization;Standards","deterministic automata;finite state machines;pattern matching;telecommunication security","D<sup>2</sup>FA;NFA;RE;XFA;bypassing space explosion;delayed input DFA;deterministic finite state automata;expensive nondeterministic finite automata;extended finite automata;high-speed regular expression matching;minimize then union framework;network intrusion detection;network prevention systems;regular expression signatures;security threats;union then minimize framework","","4","","37","","2014-04-29","Dec. 2014","","IEEE","IEEE Journals & Magazines"
"Enhanced FPGA-based architecture for regular expression matching in NIDS","Le Hoang Long; Tran Trung Hieu; Vu Tan Tai; Nguyen Hoa Hung; Tran Ngoc Thinh; Dinh Duc Anh Vu","Faculty of Computer Science and Engineering, Ho Chi Minh City University of Technology, Vietnam","Electrical Engineering/Electronics Computer Telecommunications and Information Technology (ECTI-CON), 2010 International Conference on","20100624","2010","","","666","670","Perl Compatible Regular Expression (PCRE) is increasingly used in Network Intrusion Detection System due to its efficiency. However, there are many issues that have not been completely solved for PCRE matching on hardware platform. In this paper, we propose an FPGA-based PCRE matching architecture that effectively improves the constraint repetition, an importance feature of PCRE. We enhance our architecture to handle m flag which is a powerful PCRE modifier. Besides, a tool-chain for auto-generating PCRE matching engine is also implemented. Our experimental results on low-cost Altera Cyclone II chip shows that our architecture can achieve throughput up to 1Gbps and save up to 92.74% hardware resource as compared with the conventional architecture.","","978-1-4244-5606-2;9781424456062","978-1-4244-5607-9;9781424456079","","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5491404","","Automata;Computer architecture;Computer science;Counting circuits;Doped fiber amplifiers;Field programmable gate arrays;Hardware;Intrusion detection;Programmable logic arrays;Protection","","","","1","","7","","","19-21 May 2010","","IEEE","IEEE Conference Publications"
"Robust and Fast Pattern Matching for Intrusion Detection","K. Namjoshi; G. Narlikar","Bell Labs., Alcatel-Lucent, Paris, France","INFOCOM, 2010 Proceedings IEEE","20100506","2010","","","1","9","The rule language of an Intrusion Detection System (IDS) plays a critical role in its effectiveness. A rule language must be expressive, in order to describe attack patterns as precisely as possible. It must also allow for a matching algorithm with predictable and low complexity, in order to ensure robustness against denial-of-service attacks. Unfortunately, these requirements often conflict. We show, for instance, that a single rule, when coupled with a backtracking matching algorithm, can bring the processing rate down to nearly ONE packet per second. Performance vulnerabilities of this type are known for patterns described using regular expressions, and can be avoided by using a deterministic matching algorithm. Increasingly, however, rules are being written using the more powerful regex syntax, which includes non-regular features such as back-references. The matching algorithm for general regex's is based on backtracking, and is thus vulnerable to attacks. The main contribution of this paper is a deterministic algorithm for the full regex syntax, which builds upon the deterministic algorithm for regular expressions. We provide a (rough) complexity bound on the worst-case performance, and show that this bound can be tightened through compile-time analysis of the regex structure. These bounds can be used as an admissibility check, to isolate expressions that require further analysis. Finally, we present an implementation of these algorithms in the context of the Snort IDS, and experimental results on several packet traces which show substantial improvement over the backtracking algorithm.","0743-166X;0743166X","978-1-4244-5836-3;9781424458363","","10.1109/INFCOM.2010.5462149","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5462149","","Automata;Communications Society;Computer crime;Data security;Intrusion detection;Pattern matching;Performance analysis;Prediction algorithms;Protection;Robustness","backtracking;computational complexity;deterministic algorithms;pattern matching;security of data","Snort IDS;backtracking matching algorithm;compile-time analysis;denial-of-service attacks;deterministic matching algorithm;fast pattern matching;intrusion detection systems;processing rate;regex syntax;robust pattern matching;robustness;rule language","","6","2","36","","","14-19 March 2010","","IEEE","IEEE Conference Publications"
"PiDFA: A practical multi-stride regular expression matching engine based On FPGA","J. Yang; L. Jiang; Q. Tang; Q. Dai; J. Tan","Institute of Information Engineering, Chinese Academy of Sciences, Beijing, China, University of Chinese Academy of Sciences, Beijing, China","2016 IEEE International Conference on Communications (ICC)","20160714","2016","","","1","7","DPI technology has been widely deployed in networking intrusion detection system (NIDS) to detect attacks or viruses. State-of-the-art NIDS uses deterministic finite automata (DFA) algorithms to perform regular expression matching for its stable matching speed. However, traditional DFA algorithm's throughput is limited by the input character's width (usually one character per time). Although the multi-stride method (process multiple characters per time) can increase the throughput, it leads the DFA transition table to an exponentially increased memory consumption. In this paper, we propose a novel multi-stride regular expression matching engine called PiDFA based on Field-Programmable Gate Array (FPGA). It applies two methods to solve traditional multi-stride algorithms' memory explosion problem: DFA Transition Merging method and top-k state extraction method. Experiment results show that PiDFA achieves more than 30-fold better performance than original DFA algorithm. Whats more, PiDFA is orthogonal to existing transition table compression algorithms. Implemented with PiDFA algorithm, ClusterFA's matching speed is increased by 6-50 times while maintaining ClusterFA's low memory consumption.","","","","10.1109/ICC.2016.7511199","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7511199","DFA;Deep Packet Inspection;FPGA;Regular Expression Matching","Clustering algorithms;Compression algorithms;Engines;Field programmable gate arrays;Memory management;Merging;Throughput","deterministic automata;field programmable gate arrays;finite automata;security of data","ClusterFA matching speed;DPI technology;FPGA;NIDS;PiDFA;deterministic finite automata algorithms;memory consumption;memory explosion problem;multistride method;multistride regular expression matching engine;networking intrusion detection system;top-k state extraction method","","","","","","","22-27 May 2016","","IEEE","IEEE Conference Publications"
"A Low-Energy Variation-Tolerant Asynchronous TCAM for Network Intrusion Detection Systems","N. Onizawa; W. J. Gross; T. Hanyu","Dept. of Electr. & Comput. Eng., McGill Univ., Montreal, QC, Canada","Asynchronous Circuits and Systems (ASYNC), 2013 IEEE 19th International Symposium on","20130624","2013","","","8","15","This paper introduces a low-energy variation-tolerant asynchronous ternary content-addressable memory (TCAM) for Network Intrusion Detection Systems (NIDS). The proposed special-purpose TCAM can detect packet payloads as ""virus free"" by inspecting only a few bytes. Hence, it adaptively cancels unnecessary searches, leading to greatly reduction in the search delay time and energy dissipation. For timing robustness with low area overhead, a word circuit that stores a virus pattern is designed based on both a quasi-delay insensitive (QDI) and a bundled-data techniques. The QDI word circuit is realized by combining complementary word circuits for only a small portion of the TCAM that is sensitive to delay variations. For performance evaluation, a probability of the virus detection is calculated using a set of real packet traces from MIT DARPA. A 2048 × 128-byte asynchronous TCAM is designed using TSMC 65nm CMOS technology. The energy dissipation is 93.1% lower and the cycle time is 52.4% lower than those of a deep-pipelined synchronous TCAM with a comparable area. It is also demonstrated that the proposed TCAM tolerates up to 47% variations (3s) of threshold voltages.","1522-8681;15228681","978-1-4673-5956-6;9781467359566","","10.1109/ASYNC.2013.16","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6546172","","","CMOS integrated circuits;content-addressable storage;delays;security of data","NIDS;QDI word circuit;TSMC CMOS technology;bundled-data techniques;deep-pipelined synchronous TCAM;delay variations;energy dissipation;low-energy variation-tolerant asynchronous TCAM;network intrusion detection systems;packet payload detection;packet traces;search delay time;size 65 nm;ternary content-addressable memory;virus detection probability","","4","","28","","","19-22 May 2013","","IEEE","IEEE Conference Publications"
"CompactDFA: Generic State Machine Compression for Scalable Pattern Matching","A. Bremler-Barr; D. Hay; Y. Koral","Comput. Sci. Dept., Interdiscipl. Center, Herzliya, Israel","INFOCOM, 2010 Proceedings IEEE","20100506","2010","","","1","9","Pattern matching algorithms lie at the core of all contemporary Intrusion Detection Systems (IDS), making it intrinsic to reduce their speed and memory requirements. This paper focuses on the most popular class of pattern-matching algorithms, the Aho-Corasick-like algorithms, which are based on constructing and traversing a Deterministic Finite Automaton (DFA), representing the patterns. While this approach ensures deterministic time guarantees, modern IDSs need to deal with hundreds of patterns, thus requiring to store very large DFAs which usually do not fit in fast memory. This results in a major bottleneck on the throughput of the IDS, as well as its power consumption and cost. We propose a novel method to compress DFAs by observing that the name of the states is meaningless. While regular DFAs store separately each transition between two states, we use this degree of freedom and encode states in such a way that all transitions to a specific state can be represented by a single prefix that defines a set of current states. Our technique applies to a large class of automata, which can be categorized by simple properties. Then, the problem of pattern matching is reduced to the well-studied problem of Longest Prefix Matching (LPM) that can be solved either in TCAM, in commercially available IP-lookup chips, or in software. Specifically, we show that with a TCAM our scheme can reach a throughput of 10 Gbps with low power consumption.","0743-166X;0743166X","978-1-4244-5836-3;9781424458363","","10.1109/INFCOM.2010.5462160","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5462160","","Automata;Communications Society;Computer science;Doped fiber amplifiers;Energy consumption;Hardware;Intrusion detection;Pattern matching;Throughput;USA Councils","data compression;deterministic automata;finite state machines;pattern matching;security of data","Aho-Corasick-like algorithms;IP-lookup chips;TCAM;bit rate 10 Gbit/s;compactDFA;deterministic finite automaton;generic state machine compression;intrusion detection systems;longest prefix matching;low power consumption;power consumption;scalable pattern matching algorithms","","14","1","21","","","14-19 March 2010","","IEEE","IEEE Conference Publications"
"Scalable multi-pipeline architecture for high performance multi-pattern string matching","W. Jiang; Y. H. E. Yang; V. K. Prasanna","Ming Hsieh Department of Electrical Engineering, University of Southern California, Los Angeles, CA 90089, USA","Parallel & Distributed Processing (IPDPS), 2010 IEEE International Symposium on","20100524","2010","","","1","12","Multi-pattern string matching remains a major performance bottleneck in network intrusion detection and anti-virus systems for high-speed deep packet inspection (DPI). Although Aho-Corasick deterministic finite automaton (AC-DFA) based solutions produce deterministic throughput and are widely used in today's DPI systems such as Snort [1] and ClamAV [2], the high memory requirement of AC-DFA (due to the large number of state transitions in AC-DFA) inhibits efficient hardware implementation to achieve high performance. Some recent work [3], [4] has shown that the AC-DFA can be reduced to a character trie that contains only the forward transitions by incorporating pipelined processing. But they have limitations in either handling long patterns or extensions to support multi-character input per clock cycle to achieve high throughput. This paper generalizes the problem and proves formally that a linear pipeline with H stages can remove all cross transitions to the top H levels of a AC-DFA. A novel and scalable pipeline architecture for memory-efficient multi-pattern string matching is then presented. The architecture can be easily extended to support multi-character input per clock cycle by mapping a compressed AC-DFA [5] onto multiple pipelines. Simulation using Snort and ClamAV pattern sets shows that a 8-stage pipeline can remove more than 99% of the transitions in the original AC-DFA. The implementation on a state-of-the-art field programmable gate array (FPGA) shows that our architecture can store on a single FPGA device the full set of string patterns from the latest Snort rule set. Our FPGA implementation sustains 10+ Gbps throughput, while consuming a small amount of on-chip logic resources. Also desirable scalability is achieved: the increase in resource requirement of our solution is sub-linear with the throughput improvement.","1530-2075;15302075","978-1-4244-6442-5;9781424464425","","10.1109/IPDPS.2010.5470374","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5470374","DFA;Deep packet inspection;FPGA;pipeline;string matching","Automata;Clocks;Field programmable gate arrays;Hardware;Inspection;Intrusion detection;Memory architecture;Pipelines;Programmable logic arrays;Throughput","field programmable gate arrays;finite automata;pipeline processing;security of data;string matching","Aho-Corasick deterministic finite automaton;ClamAV;Snort;anti-virus systems;field programmable gate array;high performance multipattern string matching;high-speed deep packet inspection;linear pipeline;memory-efficient multipattern string matching;multicharacter input;network intrusion detection;pipelined processing;scalable multipipeline architecture;scalable pipeline architecture","","2","","21","","","19-23 April 2010","","IEEE","IEEE Conference Publications"
"Memory-efficient pattern matching architectures using perfect hashing on graphic processing units","C. H. Lin; C. H. Liu; S. C. Chang; W. K. Hon","National Taiwan Normal University, Taipei, Taiwan","INFOCOM, 2012 Proceedings IEEE","20120510","2012","","","1978","1986","Memory architectures have been widely adopted in network intrusion detection system for inspecting malicious packets due to their flexibility and scalability. Memory architectures match input streams against thousands of attack patterns by traversing the corresponding state transition table stored in commodity memories. With the increasing number of attack patterns, reducing memory requirement has become critical for memory architectures. In this paper, we propose a novel memory architecture using perfect hashing to condense state transition tables without hash collisions. The proposed memory architecture achieves up to 99.5% improvement in memory reduction compared to the traditional two-dimensional memory architecture. We have implemented our memory architectures on graphic processing units and tested using attack patterns from Snort V2.8 and input packets form DEFCON. The experimental results show that the proposed memory architectures outperform state-of-the-art memory architectures both on performance and memory efficiency.","0743-166X;0743166X","978-1-4673-0773-4;9781467307734","","10.1109/INFCOM.2012.6195575","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6195575","deterministic finite automaton;pattern matching;perfect hashing","Automata;Educational institutions;Indexes;Memory management","computer network security;cryptography;graphics processing units;memory architecture","DEFCON;Snort V2.8;attack patterns;graphic processing units;input streams;malicious packet inspection;memory-efficient pattern matching architectures;network intrusion detection system;perfect hashing;state transition table;state transition tables","","2","","16","","","25-30 March 2012","","IEEE","IEEE Conference Publications"
"High speed pattern matching for deep packet inspection","J. Kim; S. i. Choi","Electronics and Telecommunications Research Institute, 138 Gajeongno, Yuseong-gu, Daejeon, 305-700, KOREA","Communications and Information Technology, 2009. ISCIT 2009. 9th International Symposium on","20091201","2009","","","1310","1315","In communication equipments, pattern matching techniques are used to handle various requirements, such as network security, QoS and so on. This paper presents a pattern matching technique to process multiple characters at a single clock cycle. And this paper presents the way to find a particular pattern from communication packets using TCAMs.","","978-1-4244-4521-9;9781424445219","978-1-4244-4522-6;9781424445226","10.1109/ISCIT.2009.5341095","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5341095","","Automata;Clocks;Communication equipment;Communication networks;Doped fiber amplifiers;Electronic mail;Information security;Inspection;Pattern matching;Software algorithms","content-addressable storage;pattern matching;quality of service;telecommunication security","QoS;TCAM;communication equipment;deep packet inspection;high speed pattern matching;network security;requirements handling","","1","2","7","","","28-30 Sept. 2009","","IEEE","IEEE Conference Publications"
"Adaptable intrusion detection using partial runtime reconfiguration","M. Rahmatian; H. Kooti; I. G. Harris; E. Bozorgzadeh","Computer Science Department, University of California, Irvine, Irvine, USA","Computer Design (ICCD), 2012 IEEE 30th International Conference on","20121213","2012","","","147","152","Intrusion detection approaches have been presented which detect anomalous malware behavior at runtime. Most techniques involve software-based analysis which is too slow to support the tight timing constraints often imposed on embedded systems. We propose a hardware-based intrusion detection approach which does not alter the functional performance of the system. When using a real-time operating system, the executing process changes several times each second, requiring fast adaptation on the part of the intrusion detection mechanism. We present a technique to exploit the partial runtime reconfiguration feature present on many modern field programmable gate arrays (FPGAs) to adapt intrusion detection to a new process at each context switch. The use of runtime reconfiguration enables the flexibility of software-based approaches with the performance benefits of hardware-based approaches.","1063-6404;10636404","978-1-4673-3051-0;9781467330510","","10.1109/ICCD.2012.6378633","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6378633","","Doped fiber amplifiers;Field programmable gate arrays;Intrusion detection;Law;Monitoring;Registers;Runtime","embedded systems;field programmable gate arrays;invasive software;operating systems (computers)","FPGA;adaptable intrusion detection;anomalous malware behavior;embedded systems;field programmable gate arrays;hardware-based approaches;hardware-based intrusion detection approach;partial runtime reconfiguration;real-time operating system;software-based analysis;software-based approaches;timing constraints","","0","","21","","","Sept. 30 2012-Oct. 3 2012","","IEEE","IEEE Conference Publications"
"A Memory-Efficient Parallel String Matching Architecture for High-Speed Intrusion Detection","H. Lu; K. Zheng; B. Liu; X. Zhang; Y. Liu","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing","IEEE Journal on Selected Areas in Communications","20061002","2006","24","10","1793","1804","The ability to inspect both packet headers and payloads to identify attack signatures makes network intrusion detection system (NIDS) a promising approach to protect Internet systems. Since most of the known attacks can be represented with strings or combinations of multiple substrings, string matching is a key component, as well as the bottleneck in NIDS to address the requirement of constantly increasing capacity. We propose a memory-efficient multiple-character-approaching architecture consisting of multiple parallel deterministic finite automata (DFAs), called TDP-DFA. By employing efficient representations for the transition rules in each DFA, TDP-DFA significantly reduces the complexity. We also present a novel scheme to share the storage of transition rules among multiple DFAs, substantially decreasing the total storage cost, and avoiding the cost increase being proportional to the number of DFAs. We evaluate this design through theoretical analysis and comprehensive experiments. Results show that TDP-DFA is able to meet the critical requirement of OC-768 wirespeed processing, as well as constituting a promising way for scaling up to cope with throughput over 100 Gb/s in the future","0733-8716;07338716","","","10.1109/JSAC.2006.877221","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1705612","Computer network security;finite automata;parallel processing;site security monitoring;string matching","Application specific integrated circuits;Automata;Costs;Frequency;IP networks;Intrusion detection;Memory architecture;Payloads;Protection;Throughput","Internet;deterministic automata;finite automata;packet switching;parallel architectures;security of data;string matching;telecommunication security","Internet system;NIDS;OC-768 wirespeed processing;TDP-DFA;deterministic finite automata;memory-efficient multiple-character-approach;network intrusion detection system;packet header;parallel architecture;string matching","","25","4","35","","","Oct. 2006","","IEEE","IEEE Journals & Magazines"
"Pipelined Parallel AC-Based Approach for Multi-String Matching","W. Lin; B. Liu","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China","Parallel and Distributed Systems, 2008. ICPADS '08. 14th IEEE International Conference on","20081222","2008","","","665","672","New applications such as real-time packet processing require high-speed string matcher, and the number of strings in pattern store is increasing to tens of thousands, which requires a memory efficient solution. In this paper, a pipelined parallel approach for hardware implementation of Aho-Corasick (AC) algorithm for multiple strings matching called P2-AC is presented. P2-AC organizes the transition rules in multiple stages and processes in pipeline manner, which significantly simplifies the DFA state transition graph into a character tree that only contains forwarding edges. In each stage, parallel SRAMs are used to store and access transition rules of DFA in memory. Transition rules can be efficiently stored and accessed in one cycle. The memory cost is less than 47% of the best known AC-based methods. P2-AC supports incremental update and scales well with the increasing number of strings. By employing two-port SRAMs, the throughput of P2-AC is doubled with little control overhead.","1521-9097;15219097","978-0-7695-3434-3;9780769534343","","10.1109/ICPADS.2008.47","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4724378","deterministic finite automata;network intrusion detection;parallel SRAMs;pipelined processing;string matching","Application software;Computer science;Costs;Doped fiber amplifiers;Hardware;Intrusion detection;Pattern matching;Pipelines;Real time systems;Tree graphs","SRAM chips;computational complexity;deterministic automata;finite automata;parallel algorithms;pipeline processing;string matching;trees (mathematics)","character tree;deterministic finite automata state transition rule graph;hardware implementation;memory-efficient solution;multistring matching algorithm;parallel two-port SRAM;pipelined parallel Aho-Corasick algorithm;real-time packet processing","","4","3","19","","","8-10 Dec. 2008","","IEEE","IEEE Conference Publications"
"Conversion of Decision Tree Into Deterministic Finite Automaton for High Accuracy Online SYN Flood Detection","M. Luckner","Fac. of Math. & Inf. Sci., Warsaw Univ. of Technol., Warsaw, Poland","Computational Intelligence, 2015 IEEE Symposium Series on","20160111","2015","","","75","82","While collecting data from network traffic, one can create classifiers that recognize threats, anomalies, or other events. The set of labelled Net Flow records collecting traffic statistics is a very useful source of decision rules that classify the records. These rules can be created automatically using machine learning techniques. However, the classifiers learned on such records may recognise only past events and cannot recognise current events, because not all data were collected. A deterministic finite automaton is a classifier that can recognise events online. However, the automaton is hard to project in case of complex issues. The paper proposes how to convert a decision tree into a deterministic finite automaton. The decision tree learns how to recognise threats using the collected data. Consequently, the set of decision rules is transformed into a finite automaton that can detect events before the full complement of data is collected. The method is limited to small trees, but can solve real problems. As an example, the detection of the TCP SYN flood attack is presented. For that example, the created automaton has the same high accuracy ratio as the decision tree, but can take decisions over three times faster.","","978-1-4799-7560-0;9781479975600","","10.1109/SSCI.2015.21","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7376594","","Automata;Computational intelligence;Decision trees;Detectors;Floods;Hardware;Learning automata","decision trees;finite automata","TCP SYN flood attack detection;decision rules;decision tree;deterministic finite automaton;high accuracy online SYN flood detection;threat recognition","","","","18","","","7-10 Dec. 2015","","IEEE","IEEE Conference Publications"
"On implementing packet inspection using CUDA enabled graphical processing units","S. Zoican; M. Vochin","Univ. Politeh. of Bucharest, Bucharest, Romania","Communications (COMM), 2014 10th International Conference on","20140726","2014","","","1","6","This work has the goal to study how an efficient deep packet inspection (DPI) algorithm may be implemented using the graphical processing unit (GPU) CUDA (Computer Unified Device Architecture) enabled boards existing in personal computers, and to analyze implementation efficiency. The following tasks have been analyzed: the parallelization of the pattern matching algorithm and the optimization of C code written for Nvidia compiler to obtain the best performance. The conclusion shows that CUDA technology represents a very attractive solution to implement DPI algorithms without the typically memory and complexity constraints.","","","","10.1109/ICComm.2014.6866661","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6866661","CUDA technology;deep packet inspection;deterministic finite automaton;pattern search;significant character","Algorithm design and analysis;Computer architecture;Graphics processing units;Inspection;Instruction sets;Kernel;Registers","computer networks;graphics processing units;parallel algorithms;parallel architectures;pattern matching","C code optimization;CUDA enabled graphical processing units;Nvidia compiler;computer unified device architecture;deep packet inspection algorithm;pattern matching algorithm parallelization","","0","","14","","","29-31 May 2014","","IEEE","IEEE Conference Publications"
"Hardware acceleration of regular expression repetitions in deep packet inspection","B. Cronin; X. Wang","Sch. of Electron. Eng., Dublin City Univ., Dublin, Ireland","IET Information Security","20131219","2013","7","4","327","335","Network Intrusion Detection Systems (NIDS) make extensive use of regular expressions (regexes) as attack signatures. Such expressions can be handled in hardware using a bit-parallel (BP) architecture based on the Glushkov non-deterministic finite automata (NFA). However, many expressions contain constrained {min, max} repetitions which first need to be unrolled so that they can be handled by the standard BP system. Such unrolling often leads to an excessive memory requirement which makes handling of such regexes unfeasible. This study presents a solution, based on the standard BP architecture, which incorporates a counting mechanism that renders unrolling unnecessary. As a result, many regexes, which were previously unsuitable for the standard BP system, can now be efficiently handled. Unlike many other approaches, this architecture is dynamically reconfigurable thanks to its memory, rather than logic, based engine. This is important as NIDS rule sets are regularly updated. It can also handle repetition of both single and multi-symbol sub-expressions.","1751-8709;17518709","","","10.1049/iet-ifs.2012.0340","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6673707","","","computer network security;digital signatures;finite automata;symbol manipulation","Glushkov nondeterministic flnite automata;NFA;NIDS;NIDS rule sets;attack signatures;bit-parallel architecture;constrained repetitions;deep packet inspection;hardware acceleration;multisymbol subexpressions;network intrusion detection systems;regular expression repetitions;standard BP system","","0","","","","","December 2013","","IET","IET Journals & Magazines"
"A regular expression grouping algorithm based on partitioning method","G. He; Y. Wang; X. Wu","Beijing Key Laboratory of Network System Architecture and Convergence, School of Information and Communication Engineering, Beijing University of Posts and Telecommunications, Beijing 100876, China","2012 3rd IEEE International Conference on Network Infrastructure and Digital Content","20130124","2012","","","271","274","Owing to the strong character expressive power, regular expressions gradually replace explicit string and become the first choice of patterns describing method. In the current network security products, huge amount of patterns lead to dramatic increase of the DFA storage space and affect the efficiency of matching. This paper presents a regular expression grouping algorithm based on partitioning method. It reduces the total number of DFA states and improves the matching performance which is also suitable for multi-core processor.","2374-0272;23740272","978-1-4673-2201-0;9781467322010","","10.1109/ICNIDC.2012.6418758","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6418758","DFA;Multi-core processor;Partitioning method;Regular expression","Algorithm design and analysis;Automata;Doped fiber amplifiers;Educational institutions;Multicore processing;Partitioning algorithms","deterministic automata;finite automata","DFA storage space;deterministic finite automata;network security product;partitioning method;regular expression grouping algorithm;strong character expressive power","","1","","10","","","21-23 Sept. 2012","","IEEE","IEEE Conference Publications"
"Fast filtering for intrusion detection systems with the shift-or algorithm","Sung-Il Oh; Inbok Lee; Min Sik Kim","Sch. of Elec., Telecommun., &amp; Comput. Eng., Korea Aerosp. Univ., Goyang, South Korea","2012 18th Asia-Pacific Conference on Communications (APCC)","20121220","2012","","","869","870","Intrusion Detection Systems (IDS) play an important role in network security. The main challenge is how to find occurrences of patterns defined in the rule set which describe the signature of malicious activities. In this paper, we propose an efficient exact pattern matching algorithm based on the bit-parallel approach. Experimental results show that our algorithm outperforms the traditional Aho-Corasick automaton at the cost of a small number of false positives.","2163-0771;21630771","978-1-4673-4726-6;9781467347266","978-1-4673-4727-3;9781467347273","10.1109/APCC.2012.6388206","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6388206","","Automata;Educational institutions;Electronic mail;IP networks;Intrusion detection;Pattern matching","pattern matching;security of data;telecommunication security","bit-parallel approach;fast filtering;intrusion detection systems;malicious activities;network security;pattern matching;rule set;shift-or algorithm","","0","","7","","","15-17 Oct. 2012","","IEEE","IEEE Conference Publications"
"An Extended Automata to Efficiently Match Counting Constraints Patterns","Y. Yuan; L. Peng; Z. Zheng; W. Hui; G. C. Cheng","Inst. of Inf. Eng., Zhengzhou, China","E-Business and E-Government (ICEE), 2010 International Conference on","20100930","2010","","","2018","2022","Regular expression matching is an important application in the area of network security. In this paper, we analyse the limitation of the existing methods and show the classification of counting constraints patterns. We then present a new representation for deterministic finite automata, called Bitmap Shift Finite Automata (Bs-FA), which introduces condition function and bitmap structure. Bs-FA handles counting constraints patterns effectively and considerably reduces memory space requirement of states by evaluating this method on signature sets used in Snort. Overall, for all signature sets and compression methods evaluated of counting constraints patterns, Bs-FA offers the best memory reduction.","","978-0-7695-3997-3;9780769539973","","10.1109/ICEE.2010.510","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5592633","Compressed Algorithm;DFA;Deep Packet Inspection;Regular Expressions","Automata;Classification algorithms;Construction industry;Doped fiber amplifiers;Intrusion detection;Memory management;Pattern matching","finite automata;pattern matching;security of data","Snortmemory space requirement;bitmap shift finite automata;counting constraints patterns;deterministic finite automata;extended automata;network security;regular expression matching","","0","","24","","","7-9 May 2010","","IEEE","IEEE Conference Publications"
"A practical network intrusion detection system for inline FPGAs on 10GbE network adapters","K. Jaic; M. C. Smith; N. Sarma","Holcombe Dept. of of Electr. & Comput. Eng., Clemson Univ., Clemson, SC, USA","2014 IEEE 25th International Conference on Application-Specific Systems, Architectures and Processors","20140731","2014","","","180","181","A network intrusion detection system (NIDS), such as SNORT, analyzes incoming packets to identify potential security threats. Pattern matching is arguably the most important and most computationally intensive component of a NIDS. Software-based NIDS implementations drop up to 90% of packets during increased network load even at lower network bandwidth. We propose an alternative hybrid-NIDS that couples an FPGA with a network adapter to provide hardware support for pattern matching and software support for post processing. The proposed system, SFAOENIDS, offers an extensible open-source NIDS for Solarflare AOE devices. The pattern matching engine-the primary component of the hardware architecture was designed based on the requirements of typical NIDS implementations. In testing on a real network environment, the SFAOENIDS hardware implementation, operating at 200 MHz, handles a 10Gbps data rate without dropping packets while simultaneously minimizing the server CPU load.","1063-6862;10636862","","","10.1109/ASAP.2014.6868655","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6868655","","Engines;Field programmable gate arrays;Hardware;Intrusion detection;Memory management;Pattern matching;Software","field programmable gate arrays;security of data","SFAOENIDS;SNORT;Solarflare AOE devices;inline FPGA;lower network bandwidth;network adapters;network load;open-source NIDS;pattern matching;pattern matching engine;practical network intrusion detection system;real network environment;security threats;software based NIDS implementations","","1","","8","","","18-20 June 2014","","IEEE","IEEE Conference Publications"
"TFA: A Tunable Finite Automaton for Pattern Matching in Network Intrusion Detection Systems","Y. Xu; J. Jiang; R. Wei; Y. Song; H. J. Chao","Polytech. Sch. of Eng., New York Univ., New York, NY, USA","IEEE Journal on Selected Areas in Communications","20141127","2014","32","10","1810","1821","Deterministic finite automatons (DFAs) and nondeterministic finite automatons (NFAs) are two typical automatons used in the network intrusion detection system. Although they both perform regular expression matching, they have quite different performance and memory usage properties. DFAs provide fast and deterministic matching performance but suffer from the well-known state explosion problem. NFAs are compact, but their matching performance is unpredictable and with no worst case guarantee. In this paper, we propose a new automaton representation of regular expressions, called tunable finite automaton (TFA), to deal with the DFAs' state explosion problem and the NFAs' unpredictable performance problem. Different from a DFA, which has only one active state, a TFA allows multiple concurrent active states. Thus, the total number of states required by the TFA to track the matching status is much smaller than that required by the DFA. Different from an NFA, a TFA guarantees that the number of concurrent active states is bounded by a bound factor b that can be tuned during the construction of the TFA according to the needs of the application for speed and storage. Simulation results based on regular expression rule sets from Snort and Bro show that, with only two concurrent active states, a TFA can achieve significant reductions in the number of states and memory usage, e.g., a 98% reduction in the number of states and a 95% reduction in memory space.","0733-8716;07338716","","","10.1109/JSAC.2014.2358856","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6905778","Regular expression;finite automaton;pattern matching;state explosion","Automata;Bandwidth;Complexity theory;Educational institutions;Encoding;Explosions;Memory management","finite automata;pattern matching;public domain software;security of data","Bro;DFA;NFA;Snort;TFA;concurrent active states;network intrusion detection systems;nondeterministic finite automatons;pattern matching;regular expression rule sets;tunable finite automaton","","0","","25","","2014-09-19","Oct. 2014","","IEEE","IEEE Journals & Magazines"
"A workload for evaluating deep packet inspection architectures","M. Becchi; M. Franklin; P. Crowley","Computer Science and Engineering Department, Washington University in St. Louis, MO 63130 USA","Workload Characterization, 2008. IISWC 2008. IEEE International Symposium on","20080930","2008","","","79","89","High-speed content inspection of network traffic is an important new application area for programmable networking systems, and has recently led to several proposals for high-performance regular expression matching. At the same time, the number and complexity of the patterns present in well-known network intrusion detection systems has been rapidly increasing. This increase is important since both the practicality and the performance of specific pattern matching designs are strictly dependent upon characteristics of the underlying regular expression set. However, a commonly agreed upon workload for the evaluation of deep packet inspection architectures is still missing, leading to frequent unfair comparisons, and to designs lacking in generality or scalability. In this paper, we propose a workload for the evaluation of regular expression matching architectures. The workload includes a regular expression model and a traffic generator, with the former characterizing different levels of expressiveness within rule-sets and the latter characterizing varying degrees of malicious network activity. The proposed workload is used here to evaluate designs (e.g., different memory layouts and hardware organizations) where the matching algorithm is based on compressed deterministic and non deterministic finite automata (DFAs and NFAs).","","978-1-4244-2777-2;9781424427772","978-1-4244-2778-9;9781424427789","10.1109/IISWC.2008.4636093","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4636093","","Algorithm design and analysis;Character generation;Hardware;Inspection;Intrusion detection;Pattern matching;Proposals;Scalability;Telecommunication traffic;Traffic control","communication complexity;computer networks;data compression;deterministic automata;finite automata;formal languages;string matching;telecommunication security;telecommunication traffic","communication complexity;compressed deterministic finite automata;compressed nondeterministic finite automata;deep packet inspection architecture;high-performance regular expression pattern matching;high-speed content inspection;malicious network activity;network intrusion detection system;network traffic;programmable networking system","","23","3","28","","","14-16 Sept. 2008","","IEEE","IEEE Conference Publications"
"Multi-Character Processor Array for Pattern Matching in Network Intrusion Detection System","Y. K. Chang; M. L. Tsai; Y. R. Chung","Nat. Cheng Kung Univ., Tainan","22nd International Conference on Advanced Information Networking and Applications (aina 2008)","20080403","2008","","","991","996","Network intrusion detection system (NIDS) is a system developed for identifying attacks by using a set of rules. NIDS is an efficient way to provide the security protection for today's Internet. Pattern match algorithm plays an important role in NIDS that performs searches against multiple patterns for a string match. Pattern matching is a computationally expensive task. Traditional software-based NIDS solutions usually can not achieve a high-speed required for ever growing Internet attacks. In order to satisfy high-speed packet content inspection, hardware-implementable pattern match algorithm is required. In this paper, we propose a hardware-based pattern match architecture that employs a multi-character processor array. The proposed multi-character processor array is a parallel and pipelined architecture which can process multiple characters of the input stream per cycle. The proposed architecture can reduce a lot of unnecessary computations and thus it is power efficient. We use snort pattern sets and DEFCON packet traces to perform our simulations. Our experiment results show that, with a 3-character processor array, we can reduce 83% of the computations compared with the brute force approach.","1550-445X;1550445X","978-0-7695-3095-6;9780769530956","","10.1109/AINA.2008.119","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4482814","Snort;intrusion detection;pattern matching;processor array","Application software;Automata;Computer architecture;Computer science;Filters;Internet;Intrusion detection;Pattern matching;Payloads;Protection","Internet;parallel architectures;pipeline processing;security of data;string matching","DEFCON packet traces;Internet;attacks identification;hardware-based pattern match architecture;multicharacter processor array;network intrusion detection system;packet content inspection;parallel architecture;pipelined architecture;security protection;snort pattern sets;string matching","","1","1","13","","","25-28 March 2008","","IEEE","IEEE Conference Publications"
"The Cost Effective Pre-processing Based NFA Pattern Matching Architecture for NIDS","Y. K. Chang; C. R. Chang; C. C. Su","Dept. of Comput. Sci. & Inf. Eng., Nat. Cheng Kung Univ., Tainan, Taiwan","2010 24th IEEE International Conference on Advanced Information Networking and Applications","20100601","2010","","","385","391","Network Intrusion Detection System (NIDS) is a system which can detect network attacks resulted from worms and viruses on the Internet. An efficient pattern matching algorithm plays an important role in NIDS. There have been many proposed methods for pattern matching algorithms. Traditionally, the multi-character NFA that is capable of matching multiple characters per cycle can be built by duplicating entire circuit of 1-character architecture. In this paper, we propose a pre-processing based architecture to improve the original multi-character architecture. The design of the proposed architecture and its implementation in FPGA are described in details. Our simulation results show that the proposed architecture performs better than all the existing Brute-Force based approaches in terms of the throughput and the slice utilization. Specifically, the proposed architectures of 2-character and 4-character designs can achieve the throughputs of 4.68 and 7.27 Gbps and the slice utilization of 2.86 and 2.10 in terms of char/slice, respectively.","1550-445X;1550445X","978-1-4244-6695-5;9781424466955","","10.1109/AINA.2010.42","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5474723","Finite state machine;Intrusion detection;Multi-character;Pattern matching","Application software;Automata;Clocks;Computer architecture;Costs;Doped fiber amplifiers;Field programmable gate arrays;Intrusion detection;Pattern matching;Throughput","Internet;computer viruses;field programmable gate arrays;finite state machines;pattern matching","Brute-Force;FPGA;NFA pattern matching architecture;Network Intrusion Detection System;bit rate 4.68 Gbit/s to 7.27 Gbit/s;deterministic finite automata;field programmable gate array;finite state machines;network attacks detection;network intrusion detection system;original multicharacter architecture","","1","","16","","","20-23 April 2010","","IEEE","IEEE Conference Publications"
"Benchmarking of compressed DFAs for traffic identification: Decoupling data structures from models","W. Melo; S. Fernandes; R. Antonello; D. Sadok; J. Kelner; G. Szab&#x00F3;","Federal University of Pernambuco (UFPE), Recife, Brazil","Global Communications Conference (GLOBECOM), 2012 IEEE","20130422","2012","","","1763","1769","Current network traffic analysis systems heavily rely on Deep Packet Inspection (DPI) techniques, such as Finite Automata (FA), to detect patterns carried by regular expression (regex). However, traditional Finite Automata cannot keep up with the ever-growing speed of the Internet links. Although there are a number of efficient FA compressing mechanisms for DPIs, there is no standardized or common way to evaluate and compare them. In this scenario, this paper proposes a methodology to evaluate and compare automaton models and the data-structures that materialize them. We also adapt state-of-the-art memory layouts to better fit in today's computer architectures. Finally, we apply our methodology to most important automaton models, memory layouts, and well-known signature sets. The results show us that some memory layouts are not efficient for regexes that represent small automata and other ones which fit only with uncompressed automata. Further, we also found out that theoretical studies about memory usage from memory encodings are not as accurate as they should be.","1930-529X;1930529X","978-1-4673-0920-2;9781467309202","978-1-4673-0919-6;9781467309196","10.1109/GLOCOM.2012.6503370","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6503370","DFA Models;Deep Packet Inspection;Performance Evaluation","","Internet;data compression;data structures;deterministic automata;finite automata;inspection;telecommunication traffic","DPI;FA compressing mechanisms;Internet links;automaton models;compressed DFA;computer architectures;data structure decoupling;deep packet inspection techniques;deterministic finite automata;memory encodings;memory layouts;network traffic analysis systems;regular expression;signature sets;traffic identification","","1","","20","","","3-7 Dec. 2012","","IEEE","IEEE Conference Publications"
"Hybrid Regular Expression Matching for Deep Packet Inspection on Multi-Core Architecture","Y. Sun; H. Liu; V. C. Valgenti; M. S. Kim","Sch. of Electr. & Comput. Eng., Washington State Univ., Pullman, WA, USA","Computer Communications and Networks (ICCCN), 2010 Proceedings of 19th International Conference on","20100902","2010","","","1","7","Many network security applications in today's networks are based on deep packet inspection, checking not only the header portion but also the payload portion of a packet. For example, traffic monitoring, layer-7 filtering, and network intrusion detection all require an accurate analysis of packet content in search for predefined patterns to identify specific classes of applications, viruses, attack signatures, etc. Regular expressions are often used to represent such patterns. They are implemented using finite automata, which take the payload of a packet as an input string. However, existing approaches, both non-deterministic finite automata (NFA) and deterministic finite automata (DFA), have limitations; NFAs have excessive time complexity while DFAs have excessive space complexity. In this paper, we propose an efficient algorithm for regular expression matching to implement deep packet inspection on multi-core architecture. A regular expression is split into NFA-friendly components and DFA-friendly components, which are then assigned to different cores. This hybrid method combines the merits of NFA and DFA implementations, and efficiently takes advantage of multi-core architecture. We evaluate our algorithm using rule sets provided by Snort, a popular open-source intrusion detection system. The simulation results show that our approach outperforms existing NFA/DFA and hybrid approaches. Furthermore, our algorithm performs well on the important issues on multi-core architecture design, such as load balancing, data locality and communication between cores.","1095-2055;10952055","978-1-4244-7114-0;9781424471140","","10.1109/ICCCN.2010.5560073","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5560073","","Automata;Bandwidth;Complexity theory;Doped fiber amplifiers;Memory management;Multicore processing;Program processors","computer viruses;finite automata;resource allocation;security of data;telecommunication networks;telecommunication security;telecommunication traffic","attack signatures;data locality;deep packet inspection;hybrid regular expression matching;layer-7 filtering;load balancing;multicore architecture;network intrusion detection;network security;nondeterministic finite automata;open-source intrusion detection;payload portion;space complexity;traffic monitoring;viruses","","3","1","27","","","2-5 Aug. 2010","","IEEE","IEEE Conference Publications"
"Proving correctness of regular expression accelerators","M. Purandare; K. Atasu; C. Hagleitner","IBM Research Zurich","Design Automation Conference (DAC), 2012 49th ACM/EDAC/IEEE","20120719","2012","","","350","355","A popular technique in regular expression matching accelerators is to decompose a regular expression and communicate through instructions executed by a post-processor. We present a complete verification method that leverages the success of sequential equivalence checking (SEC) to proving correctness of the technique. The original regular expression and the system of decomposed regular expressions are modeled as netlists and their equivalence is proved using SEC. SEC proves correct handling of 840 complex patterns from the Emerging Threats open rule set in 50 hours, eliminating altogether informal simulation and testing.","0738-100X;0738100X","978-1-4503-1199-1;9781450311991","","10.1145/2228360.2228424","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6241532","Formal Verification;Regular Expression Accelerators","Doped fiber amplifiers;Engines;Hardware;Impedance matching;Optimization;Registers;Testing","formal verification;theorem proving","Emerging Threats open rule set;SEC;correctness proving;formal verification method;net-lists;postprocessor;regular expression matching accelerators;sequential equivalence checking","","1","1","15","","","3-7 June 2012","","IEEE","IEEE Conference Publications"
"A high effective papilionaceous automata to match multiple counting constraint pattern","Z. Rong-cai; Z. Shuo; L. Peng; Z. Li","Department of Computer and Science China National Digital Switching System Center (NDSC) Zhengzhou China","Communication Software and Networks (ICCSN), 2011 IEEE 3rd International Conference on","20110908","2011","","","21","24","Regular expression matching is a key technology of network security. Around this issue, one of the regular expression patterns in real rule sets called counting constraint pattern is analyzed in this paper. Besides, the complex characteristics of counting constrain pattern syntax and the problems of state explosion lead by patterns composition are studied. Based on the analysis of the limitations of existing matching algorithms, aimed at the multiple counting constraint pattern composition, a papilionaceous automata applied to deep packet inspection is proposed. The results show that the compression ratio could reach 94.86% in Linux L7-filter rule sets, and for the majority of Bro rule sets and Snort rule sets, the compression ratio could up to 99%.","","978-1-61284-485-5;9781612844855","","10.1109/ICCSN.2011.6014209","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6014209","Counting Constraint Pattern;Deep Packet Inspection;Regular Expression;State Explosion","Doped fiber amplifiers;Explosions;Fires;Matched filters;Pattern matching;Security","automata theory;computer network security;knowledge engineering;pattern matching","Bro rule sets;Linux L7-filter rule sets;Snort rule sets;constrain pattern syntax;deep packet inspection;existing matching algorithms;multiple counting constraint pattern composition;network security;papilionaceous automata;patterns composition;real rule sets;regular expression matching;regular expression patterns;state explosion","","0","","18","","","27-29 May 2011","","IEEE","IEEE Conference Publications"
"Semiautomated Verification of Access Control Implementation in Industrial Networked Systems","M. Cheminod; L. Durante; L. Seno; A. Valenzano","National Research Council of Italy (CNR), Istituto di Elettronica e di Ingegneria dell&#8217;Informazione e delle Telecomunicazioni (IEIIT), Torino, Italy","IEEE Transactions on Industrial Informatics","20151202","2015","11","6","1388","1399","Access control is a necessary building block in the security of any kind of cyber system and, in this sense, industrial networked systems (INSs) make no exception. Typically, access control policies are specified at a high implementation-independent level of abstraction and then mapped onto the real system by leveraging available policy enforcement mechanisms. Unfortunately, different from general-purpose ICT systems, enforcement mechanisms are generally very basic in INS. As a consequence, verifying the correctness of policy implementation becomes a crucial task, especially cumbersome when it needs to be carried out entirely by hand. This paper presents a new methodology, which also serves as the basis of a purposely developed software tool conceived to cope with the lack of policy enforcement mechanisms in INS and to allow semiautomatic verification of policy implementation. Our approach is based on a twofold system model that enables both the abstract specification of access control policies and the detailed description of the target physical system. These two separate views are then combined to automatically determine whether the current system implementation matches the policy specification.","1551-3203;15513203","","","10.1109/TII.2015.2489181","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7295628","Access control policies;Industrial system security;Role-Based Access Control (RBAC);access control policies;automated verification;industrial system security;role-based access control (RBAC)","Access control;Automata;Computational modeling;Data models;Informatics;Ports (Computers);System implementation","authorisation;computer network security;formal specification;formal verification","INS;abstract specification;access control implementation;access control policies;cyber system;implementation-independent abstraction level;industrial networked systems;policy enforcement mechanisms;policy implementation;policy specification;semiautomated verification;target physical system;twofold system model","","","","44","","2015-10-09","Dec. 2015","","IEEE","IEEE Journals & Magazines"
"Hardware-accelerated regular expression matching for high-throughput text analytics","K. Atasu; R. Polig; C. Hagleitner; F. R. Reiss","IBM Research - Zurich","2013 23rd International Conference on Field programmable Logic and Applications","20131024","2013","","","1","7","Advanced text analytics systems combine regular expression (regex) matching, dictionary processing, and relational algebra for efficient information extraction from text documents. Such systems require support for advanced regex matching features, such as start offset reporting and capturing groups. However, existing regex matching architectures based on reconfigurable nondeterministic state machines and programmable deterministic state machines are not designed to support such features. We describe a novel architecture that supports such advanced features using a network of state machines. We also present a compiler that maps the regexs onto such networks that can be efficiently realized on reconfigurable logic. For each regex, our compiler produces a state machine description, statically computes the number of state machines needed, and produces an optimized interconnection network. Experiments on an Altera Stratix IV FPGA, using regexs from a real life text analytics benchmark, show that a throughput rate of 16 Gb/s can be reached.","1946-147X;1946147X","","","10.1109/FPL.2013.6645534","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6645534","","Delays;Dictionaries;Doped fiber amplifiers;Multiprocessor interconnection;Registers;Semantics","field programmable gate arrays;finite state machines;knowledge acquisition;pattern matching;relational algebra;text analysis","Altera Stratix IV FPGA;bit rate 16 Gbit/s;capturing groups;compiler;dictionary processing;hardware-accelerated regular expression matching;high-throughput text analytics;information extraction;optimized interconnection network;programmable deterministic state machines;reconfigurable logic;reconfigurable nondeterministic state machines;regex matching architectures;relational algebra;start offset reporting;text documents","","4","","20","","","2-4 Sept. 2013","","IEEE","IEEE Conference Publications"
"Monitoring Regular Expressions on Out-of-Order Streams","T. Johnson; S. Muthukrishnan; I. Rozenbaum","AT&T Laboratories, johnsont@research.att.com","2007 IEEE 23rd International Conference on Data Engineering","20070604","2007","","","1315","1319","We present an efficient algorithm for regular expression matching on streams with out of order data, while maintaining a small state and without complete stream reconstruction. We have implemented three versions of the algorithm - sequential, parallel and mixed - and show by experimental study that the algorithms are highly effective in matching regular expressions on IP packet streams.","1063-6382;10636382","1-4244-0802-4;1424408024","1-4244-0803-2;1424408032","10.1109/ICDE.2007.369001","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4221791","","Automata;Counting circuits;Data security;Doped fiber amplifiers;Laboratories;Monitoring;Out of order;Payloads;Protocols;Telecommunication traffic","IP networks;parallel algorithms;pattern matching","IP packet streams;mixed algorithm;out-of-order data streaming;parallel algorithm;regular expression matching;sequential algorithm","","2","2","8","","","15-20 April 2007","","IEEE","IEEE Conference Publications"
"Fast regular expression matching in hardware using NFA-BDD combination","D. Chasaki; T. Wolf","Department of Electrical and Computer Engineering, University of Massachusetts, Amherst, USA","Architectures for Networking and Communications Systems (ANCS), 2010 ACM/IEEE Symposium on","20101109","2010","","","1","2","The development of Network Intrusion Detection Systems (NIDS) is nowadays a powerful solution to defend against various network security threats. There has been a lot of research effort devoted to hardware-based NIDS, because of (1) the massive amount of computation performed by regular expression matching algorithms and (2) the gigabit per second performance requirement of modern NIDS. Hardware-based NIDS take advantage of parallelization inherent in FPGAs, ASICs or network processors to support very high network speeds, while software approaches fail to do so.","","978-1-4244-9127-8;9781424491278","978-1-4503-0379-8;9781450303798","10.1145/1872007.1872022","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5623839","","Automata;Boolean functions;Data structures;Doped fiber amplifiers;Field programmable gate arrays;Hardware;Intrusion detection","application specific integrated circuits;binary decision diagrams;computer network security;field programmable gate arrays;finite automata;reconfigurable architectures","ASIC;FPGA;NFA-BDD combination;binary decision diagrams;fast regular expression matching;gigabit per second performance;hardware-based NIDS;network intrusion detection systems;network processors;network security threats;network speeds;nondeterministic finite automata;parallelization","","0","","6","","","25-26 Oct. 2010","","IEEE","IEEE Conference Publications"
"Towards High-Performance Pattern Matching on Multi-Core Network Processing Platforms","Y. Qi; Z. Zhou; Y. Wu; Y. Xue; J. Li","Dept. of Autom., Tsinghua Univ., Beijing, China","Global Telecommunications Conference (GLOBECOM 2010), 2010 IEEE","20110110","2010","","","1","5","With the continual growth of network speed and the increasing sophistication of network applications, keeping network operations efficient and secure becomes more challenging. Pattern matching is one of the key technologies for content-ware network processing, such as traffic classification, application identification and intrusion prevention. In this paper, we propose a hybrid pattern matching algorithm optimized for multi-core network processing platforms. As a system-level solution, our scheme focuses on both performance stability and hardware/software co-design. To verify the effectiveness of our design, the proposed algorithm is implemented on a state-of-art 16-MIPS-core network processing platform and evaluated with real-life data sets. Experimental results show that, when compared with the traditional Aho-Corasick algorithm, our hybrid solution saves 60~95% memory space while guarantees stable performance on large pattern sets and against adverse test traffic.","1930-529X;1930529X","978-1-4244-5636-9;9781424456369","978-1-4244-5637-6;9781424456376","10.1109/GLOCOM.2010.5684120","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5684120","","Algorithm design and analysis;Data structures;Doped fiber amplifiers;Hardware;Pattern matching;Software;Software algorithms","multiprocessing systems;pattern matching","application identification;content-ware network processing;high-performance pattern matching;hybrid pattern matching algorithm;intrusion prevention;multicore network processing platforms;traffic classification","","1","","9","","","6-10 Dec. 2010","","IEEE","IEEE Conference Publications"
"Software Based Implementation Methodologies for Deep Packet Inspection","A. Chaudhary; A. Sardana","Dept. of Electron. & Comput. Eng., Indian Inst. of Technol. Roorkee, Roorkee, India","2011 International Conference on Information Science and Applications","20110523","2011","","","1","10","Deep Packet Inspection plays an important role for providing secure and congestion free network. It determines whether incoming traffic matches a database of signatures up to payload level, where each signature represents an attack, vulnerability, Virus, worm and even type of traffic. Other techniques like IDS/IPS etc uses only packet header information for decision making, while DPI is considers whole packet including payload for matching which provides better surveillance then other techniques. The problems that DPI system faces is low packet throughput, high memory requirement, latency and low accuracy at line speed of 10GbE/OC192. This paper reviews different software based approaches for efficient implementation of Deep Packet Inspection. A comparative study has been performed for these approaches on the basis of packet throughput and memory requirements. This paper is an attempt to exhaustively review existing techniques to addresses the probable research gaps. It then suggests a novel software based implementation of DPI to overcome the identified research gaps.","2162-9048;21629048","978-1-4244-9222-0;9781424492220","978-1-4244-9223-7;9781424492237","10.1109/ICISA.2011.5772430","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5772430","","Algorithm design and analysis;Approximation algorithms;Automata;Complexity theory;Inspection;Pattern matching;Protocols","computer network security;software engineering","DPI system;congestion free network;deep packet inspection;memory requirement;software based implementation methodology","","1","","58","","","26-29 April 2011","","IEEE","IEEE Conference Publications"
"Efficient mapping of nondeterministic automata to FPGA for fast regular expression matching","J. Ko&#191;enek; V. Ko&#353;a&#191;","Brno University of Technology Bozetechova 2, 612 66 Brno, Czech Republic","Design and Diagnostics of Electronic Circuits and Systems (DDECS), 2010 IEEE 13th International Symposium on","20100624","2010","","","54","59","With the growing number of viruses and network attacks, Intrusion Detection Systems have to match a large set of regular expressions at multi-gigabit speed to detect malicious activities on the network. Many algorithms and architectures have been designed to accelerate pattern matching, but most of them can be used only for strings or a small set of regular expressions. We propose new NFA-Split architecture, which reduces the amount of consumed FPGA resources in order to match larger set of regular expressions at multi-gigabit speed. The proposed reduction uses model of nondeterministic and deterministic automaton for effective mapping of regular expressions to FPGA. A new algorithm is designed to split the nondeterministic automaton transition table in order to map a part of the table into memory. The algorithm can place more than 49% of transition table to memory, which reduces the amount of look-up tables by more than 43% and flip-flops by more than 38% for all selected sets of regular expressions. Moreover, a sparse transition table is mapped to memory with overlapped rows, which enables to store the table in a highly compact form.","","978-1-4244-6612-2;9781424466122","","10.1109/DDECS.2010.5491816","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5491816","","Acceleration;Algorithm design and analysis;Automata;Field programmable gate arrays;Flip-flops;Hardware;Intrusion detection;Logic;Pattern matching;Viruses (medical)","computer network security;deterministic automata;field programmable gate arrays;pattern matching","FPGA;NFA-Split architecture;deterministic automaton;fast regular expression matching;flip flops;intrusion detection systems;look-up tables;malicious attacks;network attacks;nondeterministic automaton transition table;pattern matching;sparse transition table;viruses","","3","","21","","","14-16 April 2010","","IEEE","IEEE Conference Publications"
"High Speed Pattern Matching for Network IDS/IPS","M. Alicherry; M. Muthuprasanna; V. Kumar","Lucent Bell Laboratories, Murray Hill, NJ, USA - 07974. Email: mansoor@bell-labs.com","Proceedings of the 2006 IEEE International Conference on Network Protocols","20070226","2006","","","187","196","The phenomenal growth of the Internet in the last decade and society's increasing dependence on it has brought along, a flood of security attacks on the networking and computing infrastructure. Intrusion detection/prevention systems provide defenses against these attacks by monitoring headers and payload of packets flowing through the network. Multiple string matching that can compare hundreds of string patterns simultaneously is a critical component of these systems, and is a well-studied problem. Most of the string matching solutions today are based on the classic Aho-Corasick algorithm, which has an inherent limitation; they can process only one input character in one cycle. As memory speed is not growing at the same pace as network speed, this limitation has become a bottleneck in the current network, having speeds of tens of gigabits per second. In this paper, we propose a novel multiple string matching algorithm that can process multiple characters at a time thus achieving multi-gigabit rate search speeds. We also propose an architecture for an efficient implementation on TCAM-based hardware. We additionally propose novel optimizations by making use of the properties of TCAMs to significantly reduce the memory requirements of the proposed algorithm. We finally present extensive simulation results of network-based virus/worm detection using real signature databases to illustrate the effectiveness of the proposed scheme.","1092-1648;10921648","1-4244-0593-9;1424405939","1-4244-0594-7;1424405947","10.1109/ICNP.2006.320212","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4110291","","Computer networks;Data security;Filtering;IP networks;Internet;Intrusion detection;Matched filters;Monitoring;Pattern matching;Payloads","Internet;computer viruses;database management systems;digital signatures;optimisation;string matching","Aho-Corasick algorithm;Internet;TCAM-based hardware;multi-gigabit rate search speed;multiple string matching algorithm;network intrusion detection system;network intrusion prevention system;network-based virus/worm detection;optimization;pattern matching;security attack;signature database;string matching","","36","46","35","","","12-15 Nov. 2006","","IEEE","IEEE Conference Publications"
"Space-time tradeoff in regular expression matching with semi-deterministic finite automata","Y. H. E. Yang; V. K. Prasanna","Ming Hsieh Dept. of Electrical Eng., University of Southern California, USA","INFOCOM, 2011 Proceedings IEEE","20110630","2011","","","1853","1861","Regular expression matching (REM) with nondeterministic finite automata (NFA) can be computationally expensive when a large number of patterns are matched concurrently. On the other hand, converting the NFA to a deterministic finite automaton (DFA) can cause state explosion, where the number of states and transitions in the DFA are exponentially larger than in the NFA. In this paper, we seek to answer the following question: to match an arbitrary set of regular expressions, is there a finite automaton that lies between the NFA and DFA in terms of computation and memory complexities? We introduce the semi-deterministic finite automata (SFA) and the state convolvement test to construct an SFA from a given NFA. An SFA consists of a fixed number (p) of constituent DFAs (c-DFA) running in parallel; each c-DFA is responsible for a subset of states in the original NFA. To match a set of regular expressions with n overlapping symbols (that can match to the same input character concurrently), the NFA can require O(n) computation per input character, whereas the DFA can have a state transition table with O(2<sup>n</sup>) states. By exploiting the state convolvements during the SFA construction, an equivalent SFA reduces the computation complexity to O(p<sup>2</sup>=c<sup>2</sup>) per input character while limiting the space requirement to O(|Σ|×p<sup>2</sup>×(n=p)<sup>c</sup>) states, where Σ is the alphabet and c ≥ 1 is a small design constant. Although the problem of constructing the optimal (minimum-sized) SFA is shown to be NP-complete, we develop a greedy heuristic to quickly construct a near-optimal SFA in time and space quadratic in the number of states in the original NFA. We demonstrate our SFA construction using real-world regular expressions taken from the Snort IDS.","0743-166X;0743166X","978-1-4244-9919-9;9781424499199","","10.1109/INFCOM.2011.5934986","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5934986","Aho-Corasick algorithm;DFA;NFA;Regular expression;deep packet inspection;graph coloring;space-time tradeoff;state explosion","Automata;Complexity theory;Computer architecture;Doped fiber amplifiers;Explosions;Pattern matching;Throughput","computational complexity;deterministic automata;finite automata;greedy algorithms;pattern matching","NP-complete problem;computation complexity;deterministic finite automaton;greedy heuristic;memory complexity;nondeterministic finite automata;regular expression matching;semi-deterministic finite automata;space-time tradeoff;state explosion","","13","","26","","","10-15 April 2011","","IEEE","IEEE Conference Publications"
"Pattern-Based DFA for Memory-Efficient and Scalable Multiple Regular Expression Matching","J. Jiang; Y. Xu; T. Pan; Y. Tang; B. Liu","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China","Communications (ICC), 2010 IEEE International Conference on","20100701","2010","","","1","5","In Network Intrusion Detection System, De-terministic Finite Automaton (DFA) is widely used to compare packet content at a constant speed against a set of patterns specified in regular expressions (regex patterns). However, combining many regex patterns into a single DFA causes a serious state explosion. Partitioning the pat-tern set into several subsets, each of which produces a small DFA, is a practical way to deflate the state explosion. In this paper, we propose a regex pattern grouping scheme based on a new DFA model called Pattern-Based DFA (P-DFA) which supports efficient pattern-based op-erations, such as insertion, deletion, and etc. By using these basic operations, one can easily measure the state explo-sion when combining a set of regex patterns into a single DFA. Based on the privilege, we develop regex grouping algorithms for mitigating the state explosion in parallel and sequential matching environments, respectively. The evaluation shows that under the same constraints, our ap-proach requires only half the number of groups compared with the most well-known algorithms.","1550-3607;15503607","978-1-4244-6402-9;9781424464029","","10.1109/ICC.2010.5501973","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5501973","","Automata;Communications Society;Doped fiber amplifiers;Explosions;Inspection;Intrusion detection;Laboratories;Paper technology;Pattern matching;Protocols","","","","4","","15","","","23-27 May 2010","","IEEE","IEEE Conference Publications"
"Partial character decoding for improved regular expression matching in FPGAs","P. Sutton","Sch. of Inf. Technol. & Electr. Eng., Queensland Univ., Brisbane, Qld., Australia","Field-Programmable Technology, 2004. Proceedings. 2004 IEEE International Conference on","20050214","2004","","","25","32","High-speed string pattern matching in hardware is required in many applications including network intrusion detection applications. Regular expressions are one method to implement such matching and are often built in FPGAs using non-deterministic finite automata (NFAs). To obtain high throughputs it is necessary to process many bytes in parallel. This paper extends the modular NFA construction method of Sidhu and Prasanna to handle the processing of many bytes in parallel. The paper also introduces the concept of partial character decoding in which character match units are shared but the number of signals needed to be routed around the FPGA is reduced over previous shared-decoder approaches. With these approaches, throughput over 5Gbps is achieved for the full default Snort rule-set (23401 literals) in a Xilinx Virtex-2 6000 FPGA. Throughputs over 40Gbps are achieved on smaller rule-sets. Suggestions to improve performance are also given.","","0-7803-8651-5;0780386515","","10.1109/FPT.2004.1393247","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1393247","","Australia;Automata;Circuits;Decoding;Field programmable gate arrays;Hardware;Information technology;Intrusion detection;Modular construction;Throughput","decoding;field programmable gate arrays;finite automata;security of data;string matching","Snort ride-set;Xilinx Virtex-2 6000 FPGA;expression matching;field programmable gate array;high-speed string pattern matching;network intrusion detection applications;nondeterministic finite automata;parallel processing;partial character decoding","","3","4","14","","","6-8 Dec. 2004","","IEEE","IEEE Conference Publications"
"Ultra-high throughput string matching for Deep Packet Inspection","A. Kennedy; X. Wang; Z. Liu; B. Liu","School of Electronic Engineering, Dublin City University, Dublin 9, Ireland","2010 Design, Automation & Test in Europe Conference & Exhibition (DATE 2010)","20100429","2010","","","399","404","Deep Packet Inspection (DPI) involves searching a packet's header and payload against thousands of rules to detect possible attacks. The increase in Internet usage and growing number of attacks which must be searched for has meant hardware acceleration has become essential in the prevention of DPI becoming a bottleneck to a network if used on an edge or core router. In this paper we present a new multi-pattern matching algorithm which can search for the fixed strings contained within these rules at a guaranteed rate of one character per cycle independent of the number of strings or their length. Our algorithm is based on the Aho-Corasick string matching algorithm with our modifications resulting in a memory reduction of over 98% on the strings tested from the Snort ruleset. This allows the search structures needed for matching thousands of strings to be small enough to fit in the on-chip memory of an FPGA. Combined with a simple architecture for hardware, this leads to high throughput and low power consumption. Our hardware implementation uses multiple string matching engines working in parallel to search through packets. It can achieve a throughput of over 40 Gbps (OC-768) when implemented on a Stratix 3 FPGA and over 10 Gbps (OC-192) when implemented on the lower power Cyclone 3 FPGA.","1530-1591;15301591","978-1-4244-7054-9;9781424470549","","10.1109/DATE.2010.5457172","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5457172","","Acceleration;Energy consumption;Field programmable gate arrays;Hardware;IP networks;Inspection;Payloads;Search engines;Testing;Throughput","field programmable gate arrays;string matching","Aho-Corasick string matching algorithm;Cyclone 3 FPGA;Internet usage;Snort ruleset;Stratix 3 FPGA;deep packet inspection;field programmable gate arrays;fixed strings;memory reduction;multipattern matching algorithm;multiple string matching engines;on-chip memory;power consumption;ultra-high throughput string matching","","0","","18","","","8-12 March 2010","","IEEE","IEEE Conference Publications"
"CompactDFA: Scalable Pattern Matching Using Longest Prefix Match Solutions","A. Bremler-Barr; D. Hay; Y. Koral","Dept. of Comput. Sci., Interdiscipl. Center, Herzliya, Israel","IEEE/ACM Transactions on Networking","20140417","2014","22","2","415","428","A central component in all contemporary intrusion detection systems (IDSs) is their pattern matching algorithms, which are often based on constructing and traversing a deterministic finite automaton (DFA) that represents the patterns. While this approach ensures deterministic time guarantees, modern IDSs need to deal with hundreds of patterns, thus requiring to store very large DFAs, which usually do not fit in fast memory. This results in a major bottleneck on the throughput of the IDS, as well as its power consumption and cost. We propose a novel method to compress DFAs by observing that the name used by common DFA encoding is meaningless. While regular DFAs store separately each transition between two states, we use this degree of freedom and encode states in such a way that all transitions to a specific state are represented by a single prefix that defines a set of current states. Our technique applies to a large class of automata, which can be categorized by simple properties. Then, the problem of pattern matching is reduced to the well-studied problem of Longest Prefix Match (LPM), which can be solved either in ternary content-addressable memory (TCAM), in commercially available IP-lookup chips, or in software. Specifically, we show that with a TCAM our scheme can reach a throughput of 10 Gb/s with low power consumption.","1063-6692;10636692","","","10.1109/TNET.2013.2253119","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6494357","Aho–Corasick (AC);IP lookup;deep packet inspection;network intrusion detection system (NIDS);pattern matching;ternary content-addressable memory (TCAM)","","IP networks;encoding;energy consumption;pattern matching;security of data","DFA encoding;IDS;IP-lookup chips;LPM;TCAM;contemporary intrusion detection systems;degree of freedom;deterministic finite automaton;longest prefix match solutions;power consumption;scalable pattern matching algorithms;ternary content-addressable memory","","1","","34","","2013-04-04","April 2014","","IEEE","IEEE Journals & Magazines"
"StriD²FA: Scalable Regular Expression Matching for Deep Packet Inspection","X. Wang; J. Jiang; Y. Tang; B. Liu; X. Wang","Sch. of Electron. Eng., Dublin City Univ., Dublin, Ireland","2011 IEEE International Conference on Communications (ICC)","20110728","2011","","","1","5","Deep packet inspection (DPI) has become one of the key components of a Network Intrusion Detection System (NIDS) and it compares packet content to a set of rules written in regular expression. The need to keep up with ever-increasing line speed has forced NIDS designers to move to hardware or high-speed memory where memory resources are limited. In this paper, we present LBM, a novel accelerating scheme for regular expression matching which converts the original byte stream into much shorter integer stream and then matches it with a variant of DFA, called StriD<sup>2</sup>FA. In the instance of LBM that we realize, 10-15 speedup is reasonable while the memory is much smaller than traditional DFA.","1550-3607;15503607","978-1-61284-232-5;9781612842325","978-1-61284-231-8;9781612842318","10.1109/icc.2011.5963289","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5963289","","Acceleration;Converters;Doped fiber amplifiers;Inspection;Memory management;Throughput;Transforms","computer network security","deep packet inspection;network intrusion detection system;scalable regular expression matching","","0","","19","","","5-9 June 2011","","IEEE","IEEE Conference Publications"
"Accelerating network applications on X86-64 platforms","Gao Xia; Bin Liuy","Tsinghua National Laboratory for Information Science and Technology, Department of Computer Science and Technology, Tsinghua University, Beijing, China","Computers and Communications (ISCC), 2010 IEEE Symposium on","20100812","2010","","","906","912","The emerging multi-core platforms provide a high-performance, easy-to-develop and flexible way to implement high-speed network applications. For example, multi-core solutions for layer 7 protocol identification achieve 2 Gbps or higher processing speed. However, they occupy most of the processing cores in the system, leaving limited headroom for more complex manipulations, such as intrusion detection/prevention, anti-malware, data loss prevention, etc. Based on the deep understanding of the application bottlenecks and the optimization techniques of X86-64 platforms, we achieve the same or higher speed using only one core, saving more resources for further processing. In this paper, we make a deep system-wide profile and analyze the major hotspots of a typical network system on an Intel X86-64 platform, including a complete TCP/IP stack and a protocol identification engine by deep packet inspection (DPI). Profiling results and analysis show that network applications containing layer 2 to layer 7 processing are inherently memory and computation intensive. Then we propose optimization guidelines and techniques: 1) removing memory bottlenecks: combining independent irregular memory access to hide delay, using software-assistant cache prefetch to improve cache hit ratio, and mapping memory from kernel space to user space to reduce access overhead; 2) removing computation bottlenecks: using 64-bit registers and instructions to speed up the common computations, and using Streaming SIMD Extensions (SSE) instructions to accelerate special time-consuming tasks. Compared to the state-of-the-art multi-core implementations, our implementation on the X86-64 platform using only one core can deliver the same or higher processing speed of 7 Gbps with the average packet size of 501 bytes and 2 Gbps with the average packet size of 110 bytes.","1530-1346;15301346","978-1-4244-7754-8;9781424477548","","10.1109/ISCC.2010.5546496","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5546496","","Clocks;Delay;Kernel;Magnetic cores;Optimization;Pattern matching;Protocols","","","","1","","24","","","22-25 June 2010","","IEEE","IEEE Conference Publications"
"XFA: Faster Signature Matching with Extended Automata","R. Smith; C. Estan; S. Jha","Univ. of Wisconsin-Madison, Madison, WI","2008 IEEE Symposium on Security and Privacy (sp 2008)","20080528","2008","","","187","201","Automata-based representations and related algorithms have been applied to address several problems in information security, and often the automata had to be augmented with additional information. For example, extended finite-state automata (EFSA) augment finite- state automata (FSA) with variables to track dependencies between arguments of system calls. In this paper, we introduce extended finite automata (XFAs) which augment FSAs with finite scratch memory and instructions to manipulate this memory. Our primary motivation for introducing XFAs is signature matching in Network Intrusion Detection Systems (NIDS). Representing NIDS signatures as deterministic finite-state automata (DFAs) results in very fast signature matching but for several classes of signatures DFAs can blowup in space. Using nondeterministic finite-state automata (NFA) to represent NIDS signatures results in a succinct representation but at the expense of higher time complexity for signature matching. In other words, DFAs are time-efficient but space-inefficient, and NFAs are space- efficient but time-inefficient. In our experiments we have noticed that for a large class of NIDS signatures XFAs have time complexity similar to DFAs and space complexity similar to NFAs. For our test set, XFAs use 10 times less memory than a DFA-based solution, yet achieve 20 times higher matching speeds.","1081-6011;10816011","978-0-7695-3168-7;9780769531687","","10.1109/SP.2008.14","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4531153","finite automata;intrusion detection;regular expressions;signature matching","Automata;Doped fiber amplifiers;Impedance matching;Information security;Intrusion detection;Power generation;Privacy;Shape;Telecommunication traffic;Testing","computational complexity;digital signatures;finite automata","extended finite-state automata;faster signature matching;finite scratch memory;information security;network intrusion detection system;space complexity;time complexity","","37","3","33","","","18-22 May 2008","","IEEE","IEEE Conference Publications"
"Two state-based approaches to program-based anomaly detection","C. C. Michael; A. Ghosh","RST Res. Labs., USA","Computer Security Applications, 2000. ACSAC '00. 16th Annual Conference","20020806","2000","","","21","30","This paper describes two intrusion detection algorithms, and gives experimental results on their performance. The algorithms detect anomalies in execution audit data. One is a simply constructed finite-state machine, and the other monitors statistical deviations from normal program behavior. The performance of these algorithms is evaluated as a function of the amount of available training data, and they are compared to the well-known intrusion detection technique of looking for novel n-grams in computer audit data","","0-7695-0859-6;0769508596","","10.1109/ACSAC.2000.898854","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=898854","","Automatic testing;Birth disorders;Hidden Markov models;Intrusion detection;Learning automata;Statistics;Training data","auditing;finite state machines;security of data;software performance evaluation","algorithm performance;execution audit data;experimental results;finite-state machine;intrusion detection algorithms;n-grams;program-based anomaly detection;state-based approaches;statistical deviation monitoring","","11","1","16","","","Dec 2000","11 Dec 2000-15 Dec 2000","IEEE","IEEE Conference Publications"
"SRD-DFA: Achieving Sub-rule Distinguishing with Extended DFA Structure","G. Xia; X. Wang; B. Liu","Dept. of Comput. Sci. & Technol., Tsinghua Univ., Beijing, China","Dependable, Autonomic and Secure Computing, 2009. DASC '09. Eighth IEEE International Conference on","20100115","2009","","","723","728","Deep packet inspection (DPI) relies highly on regular expression due to its power of description, generalization and flexibility. In DPI, packet payload is compared against a large number of rules written in regular expression. To achieve high throughput, multiple regular expressions are combined and compiled into one DFA, which leads to two problems: a) State explosion; b) Sub-rule distinguishing in the combined rule set. While the first problem has been extensively studied in the recent years, we did not find any literature which formally discusses the second problem in detail. We formulate it and propose sub-rule distinguishable DFA (SRD-DFA), an extended DFA structure, and develop techniques to distinguish sub-rules from multiple regular expressions upon this structure. SRD-DFA can achieve the same throughput as minimized DFA, since it only incurs little extra memory consumption without extra run-time computation. Experimental results under the L7-filter rule set and a subset of Snort rule set demonstrate that our approach achieves 8 to 14 times higher throughput than the DFA without rule combination, while only introducing less than 8.4% overhead of state increase compared to the minimized DFA after rule combination. SRD-DFA can be easily used with advanced DFA compression algorithms to achieve much less memory consumption.","","978-0-7695-3929-4;9780769539294","978-1-4244-5421-1;9781424454211","10.1109/DASC.2009.71","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5380614","DFA;Minimization;Regular Expression","Automata;Computer science;Doped fiber amplifiers;Engines;Explosions;Inspection;Intrusion detection;Pattern matching;Power engineering and energy;Throughput","data compression;deterministic automata;finite automata","DFA compression algorithms;L7-filter rule set;Snort rule set;advanced DFA compression algorithms;deep packet inspection;deterministic finite automata;extended DFA structure;memory consumption;packet payload;subrule distinguishable DFA","","2","","20","","","12-14 Dec. 2009","","IEEE","IEEE Conference Publications"
"A Comparative Study on DFA-Based Pattern Matching for Deep Packet Inspection","R. K. Lenka; P. Ranjan","Comput. Sci. &amp; Eng. Dept., Motilal Nehru Nat. Inst. of Technol., Allahabad, India","Computer and Communication Technology (ICCCT), 2012 Third International Conference on","20130110","2012","","","255","260","Most of the network security applications in today's networks are based on Deep Packet Inspection (DPI). It is a form of computer network packet filtering that examines not only the header portion but also the payload part of a packet as it passes through an inspection point, searching for protocol noncompliance, viruses, Spam, intrusions or some predefined criteria to decide if the packet can pass it or it needs to be routed to a different destination. Most of the systems that perform deep packet inspection implement basic string matching algorithms to match packets against large but finite strings. However, there is growing interest in the use of regular expression-based pattern matching, since regular expressions offer superior expressive power. DFA is employed to implement regular expression matching. DFA representations of a regular expression sets in network applications require large amounts of memory, limiting their practical application. This paper presents an analysis of different compact representation of DFA such as D<sup>2</sup>FA, δFA, δ<sup>2</sup>FA.","","978-1-4673-3149-4;9781467331494","","10.1109/ICCCT.2012.59","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6394708","DFA;deep packet inspection;regular expressions","Automata;Computer science;Doped fiber amplifiers;Inspection;Intrusion detection;Memory management;Pattern matching","computer network security;computer viruses;finite automata;protocols;string matching;unsolicited e-mail","δ<sup>2</sup>FA;D<sup>2</sup>FA;DFA-based pattern matching;DPI;computer network packet filtering;deep packet inspection;delta finite automata;inspection point;intrusions;network security applications;protocol noncompliance searching;regular expression-based pattern matching;spam;string matching algorithms;virus","","1","","17","","","23-25 Nov. 2012","","IEEE","IEEE Conference Publications"
"Skip Finite Automaton: A Content Scanning Engine to Secure Enterprise Networks","J. Jiang; Y. Tang; B. Liu; Y. Xu; X. Wang","Inst. for Theor. Comput. Sci., Tsinghua Univ., Beijing, China","Global Telecommunications Conference (GLOBECOM 2010), 2010 IEEE","20110110","2010","","","1","5","Today's file sharing networks are creating potential security problems to enterprise networks, i.e., the leakage of confidential documents. In order to prevent such leakage, we propose the Data Leakage Prevention System (DLPS) which is applied at the entrance of the enterprise network to filter out the outgoing sensitive information. The DLPS is based on a content scanning engine which defines a new type of matching problem, called longest overlap matching which also exits in many other applications as a basic problem where contents are delivered by small blocks. We study the problem by comparing it with the traditional pattern matching problem in Deep Packet Inspection (DPI) of Network Intrusion Detection Systems (NIDS) whose solutions are based on finite automata. We develop a new finite automata representation called Skip-Finite Automata (Skip-FA) which detects the packets carrying sensitive information by using default transitions to implicitly track the overlapping parts between packets' payloads and sensitive files. The simulation results shows that our system achieves a matching speed of about 10B+ per memory access for small file set (>;20KB) and 100B+ per memory access for large file set (>;2500KB). We also find that the memory consumption of Skip-FA is almost the same to that of the original files.","1930-529X;1930529X","978-1-4244-5636-9;9781424456369","978-1-4244-5637-6;9781424456376","10.1109/GLOCOM.2010.5683165","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5683165","","Automata;Delay;Engines;IEEE Communications Society;Logic gates;Payloads;Radiation detectors","finite automata;peer-to-peer computing;security of data;telecommunication security","content scanning engine;data leakage prevention system;deep packet inspection;file sharing network;finite automata representation;network intrusion detection system;pattern matching problem;secure enterprise network;skip finite automata;skip finite automaton","","1","1","18","","","6-10 Dec. 2010","","IEEE","IEEE Conference Publications"
"Hybrid memory architecture for regular expression matching","C. H. Lin","National Taiwan Normal University, Taipei, Taiwan","2009 52nd IEEE International Midwest Symposium on Circuits and Systems","20090915","2009","","","1159","1162","Regular expression matching has been widely used in network intrusion detection systems due to its strong expressive power and flexibility. To match multiple regular expression patterns simultaneously, compiling multiple regular expressions into a composite DFA is an intuitive and efficient way. However, traditional memory architecture suffers from the problem of memory explosion for certain complex regular expressions. In this paper, we propose a hybrid memory architecture which inserts marginal logic elements to improve the ability of traditional memory architecture to deal with complex regular expressions. The experimental results demonstrate a significant memory reduction for complex regular expressions.","1548-3746;15483746","978-1-4244-4479-3;9781424444793","978-1-4244-4480-9;9781424444809","10.1109/MWSCAS.2009.5235940","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5235940","","Automata;Computer architecture;Doped fiber amplifiers;Explosions;Hardware;Intrusion detection;Logic;Memory architecture;Pattern matching;Payloads","memory architecture;pattern matching;security of data","hybrid memory architecture;memory reduction;network intrusion detection systems;regular expression matching","","0","","19","","","2-5 Aug. 2009","","IEEE","IEEE Conference Publications"
"Making DPI Engines Resilient to Algorithmic Complexity Attacks","Y. Afek; A. Bremler-Barr; Y. Harchol; D. Hay; Y. Koral","Blavatnik School of Computer Science, Tel Aviv University","IEEE/ACM Transactions on Networking","","2016","PP","99","1","1","This paper starts by demonstrating the vulnerability of Deep Packet Inspection (DPI) mechanisms, which are at the core of security devices, to algorithmic complexity denial of service attacks, thus exposing a weakness in the first line of defense of enterprise networks and clouds. A system and a multi-core architecture to defend from these algorithmic complexity attacks is presented in the second part of the paper. The integration of this system with two different DPI engines is demonstrated and discussed. The vulnerability is exposed by showing how a simple low bandwidth cache-miss attack takes down the Aho-Corasick (AC) pattern matching algorithm that lies at the heart of most DPI engines. As a first step in the mitigation of the attack, we have developed a compressed variant of the AC algorithm that improves the worst case performance (under an attack). Still, under normal traffic its running-time is worse than classical AC implementations. To overcome this problem, we introduce <formula formulatype=""inline""> <img src=""/images/tex/35781.gif"" alt=""{\rm MCA}^{2}""> </formula>—Multi-Core Architecture to Mitigate Complexity Attacks, which dynamically combines the classical AC algorithm with our compressed implementation, to provide a robust solution to mitigate this cache-miss attack. We demonstrate the effectiveness of our architecture by examining cache-miss algorithmic complexity attacks against DPI engines and show a goodput boost of up to 73%. Finally, we show that our architecture may be generalized to provide a principal solution to a wide variety of algorithmic complexity attacks.","1063-6692;10636692","","","10.1109/TNET.2016.2518712","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7393623","Complexity attack;DoS;deep packet inspection;multi-core","Automata;Complexity theory;Engines;Heuristic algorithms;Pattern matching;Security;Throughput","","","","","","","","2016-01-26","","","IEEE","IEEE Early Access Articles"
"Condition Factorization: A Technique for Building Fast and Compact Packet Matching Automata","A. Tongaonkar; R. Sekar","Symantec, San Francisco, CA, USA","IEEE Transactions on Information Forensics and Security","20151224","2016","11","3","468","483","Rule-based matching on network packet headers is a central problem in firewalls, and network intrusion, monitoring, and access-control systems. To enhance performance, rules are typically compiled into a matching automaton that can quickly identify the subset of rules that are applicable to a given network packet. While deterministic automata provide the best performance, previous research has shown that such automata can be exponential in the size and/or number of rules. Nondeterministic automata can avoid size explosion, but their matching time can increase quickly with the number of rules. In contrast, we present a new technique that constructs polynomial size automata. Moreover, we show that the matching time of our automata is insensitive to the number of rules. The key idea in our approach is that of decomposing and reordering the tests on packet header fields so that the result of performing a test can be utilized on behalf of many rules. Our experiments demonstrate major reductions in space requirements over previous techniques, as well as significant improvements in matching speed. Our technique can uniformly handle prioritized and unprioritized rules, and support applications that require single-match as well as multi-match.","1556-6013;15566013","","","10.1109/TIFS.2015.2489182","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7295611","Firewalls;Intrusion Detection Systems;Network Monitoring;Packet Classification;Packet classification;firewalls;intrusion detection systems;network monitoring","Automata;Firewalls (computing);Intrusion detection;Monitoring;Payloads;Polynomials;Runtime","authorisation;deterministic automata;firewalls","access-control system;compact packet matching automata;condition factorization;deterministic automata;intrusion detection;nondeterministic automata;rule-based matching","","","","45","","2015-10-09","March 2016","","IEEE","IEEE Journals & Magazines"
"Hardware implementation for scalable lookahead Regular Expression detection","M. Bando; N. S. Artan; N. Mehta; Yi Guan; H. J. Chao","Department of Electrical and Computer Engineering, Polytechnic Institute of NYU, Brooklyn, NY, USA","Parallel & Distributed Processing, Workshops and Phd Forum (IPDPSW), 2010 IEEE International Symposium on","20100524","2010","","","1","8","Regular Expressions (RegExes) are widely used in various applications to identify strings of text. Their flexibility, however, increases the complexity of the detection system and often limits the detection speed as well as the total number of RegExes that can be detected using limited resources. The two classical detection methods, Deterministic Finite Automaton (DFA) and Non-Deterministic Finite Automaton (NFA), have the potential problems of prohibitively large memory requirements and a large number of concurrent operations, respectively. Although recent schemes addressing these problems to improve DFA and NFA are promising, they are inherently limited by their scalability, since they follow the state transition model in DFA and NFA, where the state transitions occur per each character of the input. We recently proposed a scalable RegEx detection system called Lookahead Finite Automata (LaFA) to solve these problems with three novel ideas: 1. Provide specialized and optimized detection modules to increase resource utilizations. 2. Systematically reordering the RegEx detection sequence to reduce number of concurrent operations. 3. Sharing states among automata for different RegExes to reduce resource requirements. In this paper, we propose an efficient hardware architecture and prototype design implementation based on LaFA. Our proof-of-concept prototype design is built on a fraction of a single commodity Field Programmable Gate Array (FPGA) chip and can accommodate up to twenty-five thousand (25k) RegExes. Using only 7% of the logic area and 25% of the memory on a Xilinx Virtex-4 FX100, the prototype design can achieve 2-Gbps (gigabits-per-second) detection throughput with only one detection engine. We estimate that 34-Gbps detection throughput can be achieved if the entire resources of a state-of-the-art FPGA chip are used to implement multiple detection engines.","","978-1-4244-6533-0;9781424465330","","10.1109/IPDPSW.2010.5470750","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5470750","","Automata;Doped fiber amplifiers;Engines;Field programmable gate arrays;Hardware;Programmable logic arrays;Prototypes;Resource management;Scalability;Throughput","field programmable gate arrays;finite automata;optimisation;security of data","DFA;FPGA;NFA;RegExes;detection system complexity;deterministic finite automaton;field programmable gate array;hardware implementation;nondeterministic finite automaton;prototype design implementation;scalable lookahead regular expression detection","","2","","28","","","19-23 April 2010","","IEEE","IEEE Conference Publications"
"Another CDFA Based Multi-Pattern Matching Algorithm and Architecture for Packet Inspection","T. Song; D. Wang","Sch. of Comput. Sci., Beijing Inst. of Technol., Beijing, China","Computer Communications and Networks (ICCCN), 2011 Proceedings of 20th International Conference on","20110829","2011","","","1","8","Multi-pattern matching algorithm and architecture is critical for packet inspection based network security applications, especially for high speed network or large pattern sets. This paper presents a method to optimize the potential memory usage of DFA based algorithms for multi-pattern expression matching by the combining DFA's paths, named isomorphic path combination (IMPC). To achieve IMPC, a novel multi-pattern matching algorithm, called ACS, is proposed, which is based on CDFA. Compared to the algorithms on DFA, our method can reduce 78.6% states for Snort pattern set, which results in one of the most memory efficient methods. The most important is that our method is a kind of optimization and can be embedded to other algorithms as the second step for better results. Finally the architecture based on ACS is proposed and the experimental results show that 47.6% to 84.0% memory space can be saved for different size of pattern sets as compared to the best known architectures. The method is another one based on CDFA. It means that CDFA may be a more proper model for multi-pattern matching than other FAs.","1095-2055;10952055","978-1-4577-0637-0;9781457706370","","10.1109/ICCCN.2011.6005927","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6005927","","Algorithm design and analysis;Color;Computer architecture;Doped fiber amplifiers;Inspection;Pattern matching;Registers","optimisation;pattern matching;telecommunication security","CDFA;DFA based algorithms;Snort pattern set;high speed network;isomorphic path combination;memory usage;multipattern expression matching;network security;optimization;packet inspection;pattern sets","","0","","21","","","July 31 2011-Aug. 4 2011","","IEEE","IEEE Conference Publications"
"NFA-Based Pattern Matching for Deep Packet Inspection","Y. Sun; V. C. Valgenti; M. S. Kim","Sch. of Electr. & Comput. Eng., Washington State Univ., Pullman, WA, USA","Computer Communications and Networks (ICCCN), 2011 Proceedings of 20th International Conference on","20110829","2011","","","1","6","Many network security applications in today's networks are based on deep packet inspection, checking not only the header portion but also the payload portion of a packet. For example, traffic monitoring, layer-7 filtering, and network intrusion detection all require an accurate analysis of packet content in search for predefined patterns to identify specific classes of applications, viruses, attack signatures, etc. Pattern matching is a major task in deep packet inspection. The two most common implementations of Pattern matching are based on Non-deterministic Finite Automata (NFAs) and Deterministic Finite Automata (DFAs), which take the payload of a packet as an input string. In this paper, we propose an efficient NFA-based pattern matching in Binary Content Addressable Memory(BCAM), which uses data search words consisting of 1s and 0s. Our approach can process multiple characters at a time using limited BCAM entries, which makes our approach scalable well. We evaluate our algorithm using patterns provided by Snort, a popular open-source intrusion detection system. The simulation results show that our approach outperforms existing CAM-based and software-based approaches.","1095-2055;10952055","978-1-4577-0637-0;9781457706370","","10.1109/ICCCN.2011.6006095","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6006095","","Automata;Clocks;Computer aided manufacturing;Computer architecture;Doped fiber amplifiers;Microprocessors;Pattern matching","computer network security;content-addressable storage;deterministic automata;finite automata;pattern matching","BCAM;NFA-based pattern matching;Snort;binary content addressable memory;data search word;deep packet inspection;network security;nondeterministic finite automata;open-source intrusion detection system","","2","1","28","","","July 31 2011-Aug. 4 2011","","IEEE","IEEE Conference Publications"
"Multi-byte Pattern Matching Using Stride-K DFA for High Speed Deep Packet Inspection","M. Najam; U. Younis; R. U. Rasool","Sch. of Electr. Eng. & Comput. Sci. (SEECS), Nat. Univ. of Sci. & Technol. (NUST), Islamabad, Pakistan","Computational Science and Engineering (CSE), 2014 IEEE 17th International Conference on","20150129","2014","","","547","553","Deep packet inspection (DPI) is one of the crucial tasks in modern intrusion detection and intrusion prevention systems. It allows the inspection of packet payload using patterns. Modern DPI based systems use regular expressions to define these patterns. Deterministic finite automata (DFA) is considered to be an ideal choice for performing regular expression matching due to its O(1) processing complexity. However, DFAs consume large memory to store its state transition table, but this problem gets worsened when stride level of the DFA is increased. Though, increasing stride level brings significant increase in the overall speedup of the matching engine but as a trade off it consumes large memory. In this paper, we present stride-k speculative parallel pattern matching (SPPM), a technique in which a packet is first split up into two chunks and then multiple bytes per chunk are inspected at a time using stride-k DFA. Furthermore, we present a stride-k DFA compression technique using alphabet compression table (ACT) to reduce the memory requirements of stride-k DFA. We have implemented the single threaded algorithm for stride-2 SPPM. Results show that the use of stride-2 SPPM can overall increase the pattern matching speed by up to 30% as compared to traditional DFA matching, and a significant reduction of over 70% in the number iterations required for packet processing. Secondly, over 65% reduction in the number of transitions has been achieved using ACT for stride-2 DFA implementation.","","978-1-4799-7980-6;9781479979806","","10.1109/CSE.2014.125","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7023635","DFA;alphabet compression;deep packet inspection;multi-byte matching;regular expressions","Automata;Educational institutions;Indexes;Inspection;Memory management;Parallel processing;Pattern matching","computational complexity;deterministic automata;finite automata;pattern matching;security of data","ACT;alphabet compression table;deterministic finite automata;high speed deep packet inspection;intrusion detection system;intrusion prevention system;multibyte pattern matching;processing complexity;regular expression matching;stride-2 SPPM;stride-k DFA compression technique;stride-k speculative parallel pattern matching","","0","","24","","","19-21 Dec. 2014","","IEEE","IEEE Conference Publications"
"Distributed Intrusion Detection with Intelligent Network Interfaces for Future Networks","Y. Luo; K. Xiang; J. Fan; C. Zhang","Dept. of Electr. & Comput. Eng., Univ. of Massachusetts, Lowell, MA, USA","2009 IEEE International Conference on Communications","20090811","2009","","","1","5","Intrusion detection remains an important and challenging task in current and next generation networks (NGN). Emerging technologies such as multi-core processors and virtualization have changed the architecture of the building elements of NGN significantly, thus call for rethinking of how network processing is done. In this paper, we propose distributed intrusion detection using intelligent network interfaces where additional processing capabilities are available. We design and implement a prototype to perform pattern matching using network processors since pattern matching is one of the important workloads in intrusion detection. Through the experimental results, we show the feasibility and performance of distributed intrusion detection in next generation networks.","1550-3607;15503607","978-1-4244-3435-0;9781424434350","978-1-4244-3435-0;9781424434350","10.1109/ICC.2009.5198928","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5198928","","Computer architecture;IP networks;Intelligent networks;Intrusion detection;Multicore processing;Network interfaces;Network servers;Next generation networking;Pattern matching;Prototypes","network interfaces;pattern matching;security of data","distributed intrusion detection;intelligent network interfaces;multicore processors;network processing;network processors;next generation networks;pattern matching;virtualization","","0","","15","","","14-18 June 2009","","IEEE","IEEE Conference Publications"
"Kangaroo: Accelerating String Matching by Running Multiple Collaborative Finite State Machines","X. Wang; B. Liu; J. Jiang; Y. Xu; Y. Wang; X. Wang","Tsinghua Univ., Beijing, China","IEEE Journal on Selected Areas in Communications","20141127","2014","32","10","1784","1796","String matching is a key technique for network security applications such as network intrusion detection systems and antivirus scanners, where the payload of every packet is inspected against thousands of patterns in real time. As the transmission rate of Internet links is getting higher and higher, the speed of matching engines is required to be faster and faster. Existing deterministic finite automaton (DFA)-based approaches achieve high throughput at the expense of extremely expensive memory cost; therefore, they are not suitable for the scenarios where only limited on-chip memory resources are available. To achieve fast matching speed while controlling memory expense, in this paper, we propose Kangaroo, a compact string matching scheme that scans multiple characters each time by running multiple small-sized finite state machines in parallel. Specifically, Kangaroo processes k consecutive characters mostly in one cycle by accessing k different memories in parallel, where k is a predefined factor that can be tuned based on the requirement of applications. Kangaroo is memory efficient. Experimental evaluations on Snort and ClamAV rule sets show that a tenfold increase in speed can be practically achieved by a single Kangaroo matching engine with a reduced memory cost comparing with the state-of-the-art DFA-based approaches.","0733-8716;07338716","","","10.1109/JSAC.2014.2358841","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6905731","Deep packet inspection;deterministic finite automaton;finite state machine","Automata;Buildings;Collaboration;Educational institutions;Engines;Silicon;Throughput","deterministic automata;finite state machines;string matching","ClamAV;DFA;Internet links;Kangaroo scheme;Snort;antivirus scanners;collaborative finite state machines;deterministic finite automaton;network intrusion detection system;on-chip memory resources;string matching","","1","","30","","2014-09-19","Oct. 2014","","IEEE","IEEE Journals & Magazines"
"Using Cell Processors for Intrusion Detection through Regular Expression Matching with Speculation","C. Radu; C. Leordeanu; V. Cristea; D. Luchaup","Fac. of Autom. Control & Comput., Univ. Politeh. of Bucharest, Bucharest, Romania","Complex, Intelligent and Software Intensive Systems (CISIS), 2011 International Conference on","20110818","2011","","","203","210","The main purpose of network intrusion detection systems is to determine whether incoming network traffic matches known attack signatures. To achieve this goal each of the stored signatures represents a description of an attack or an undesired event in the monitored network. The main weakness with existing signature matching algorithms is that they are essentially serial operations and it is hard for them to keep up with the growing network speed. The major bottleneck in intrusion detection systems is that they are able to scan only one byte at a time, which leads to increased latency and low throughput. Thus, there is a need for a novel approach which takes advantage of the increased computing power of newer architectures. This paper presents a method which uses the Cell architecture to run an adapted speculative parallel pattern matching algorithm. Furthermore, we demonstrate that the advantages brought by our of our approach are significant compared to the serial implementation and other parallel ones. We also emphasize the advantages brought by the characteristics of the Cell architecture.","","978-1-61284-709-2;9781612847092","978-0-7695-4373-4;9780769543734","10.1109/CISIS.2011.38","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5989048","cell architecture;dfa matching;intrusion detection;parallel algorithm","Computer architecture;Doped fiber amplifiers;Intrusion detection;Microprocessors;Parallel processing;Pattern matching;Program processors","digital signatures;pattern matching;security of data;software architecture","cell architecture;network intrusion detection systems;network traffic;parallel pattern matching algorithm;regular expression matching;signature matching algorithms;using cell processors","","0","","14","","","June 30 2011-July 2 2011","","IEEE","IEEE Conference Publications"
"Optimizing Regular Expression Matching with SR-NFA on Multi-Core Systems","Y. H. E. Yang; V. K. Prasanna","Ming Hsieh Dept. of Electr. Eng., Univ. of Southern California, Los Angeles, CA, USA","Parallel Architectures and Compilation Techniques (PACT), 2011 International Conference on","20111229","2011","","","424","433","Conventionally, regular expression matching (REM) has been performed by sequentially comparing the regular expression (regex) to the input stream, which can be slow due to excessive backtracking [21]. Alternatively, the regex can be converted to a deterministic finite automaton (DFA) for efficient matching, which however may require an extremely large state transition table (STT) due to exponential state explosion [17, 27]. We propose the segmented regex-NFA (SR-NFA) architecture, where the regex is first compiled into modular nondeterministic finite automata (NFA), then partitioned, optimized, and matched efficiently on modern multi-core processors. SR-NFA offers attack-resilient multi-gigabit per second matching throughput, does not suffer from either backtracking or state explosion, and can be rapidly constructed. For regex sets that construct a DFA with moderate state explosion, i.e., on average 200k states in the STT, the proposed SR-NFA is 367k times faster to construct and update and use 23k times less memory than the DFA approach. Running on an 8-core 2.6 GHz Opteron platform, our prototype achieves 2.2 Gbps average matching throughput for regex sets with up to 4,000 SR-NFA states per regex set.","1089-795X;1089795X","978-1-4577-1794-9;9781457717949","","10.1109/PACT.2011.73","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6113850","NFA;Regular expression;bit-level parallelism;multi-core processor;thread-level parallelism","Automata;Complexity theory;Doped fiber amplifiers;Explosions;Multicore processing;Throughput;Vectors","backtracking;finite automata;multiprocessing systems","SR-NFA architecture;attack-resilient multigigabit per second;backtracking;deterministic finite automaton;exponential state explosion;large state transition table;modular nondeterministic finite automata;multicore processor;multicore system;regular expression matching","","3","","27","","","10-14 Oct. 2011","","IEEE","IEEE Conference Publications"
"High-speed string searching against large dictionaries on the Cell/B.E. Processor","D. P. Scarpazza; O. Villa; F. Petrini","IBM TJ Watson Research Center, Cell Solution Department, Yorktown Heights, NY 10598 USA","Parallel and Distributed Processing, 2008. IPDPS 2008. IEEE International Symposium on","20080603","2008","","","1","12","Our digital universe is growing, creating exploding amounts of data which need to be searched, filtered and protected. String searching is at the core of the tools we use to curb this explosion, such as search engines, network intrusion detection systems, spam filters, and anti-virus programs. But as communication speed grows, our capability to perform string searching in real-time seems to fall behind. Multi-core architectures promise enough computational power to cope with the incoming challenge, but it is still unclear which algorithms and programming models to use to unleash this power. We have parallelized a popular string searching algorithm, Aho-Corasick, on the IBM Cell/B.E. processor, with the goal of performing exact string matching against large dictionaries. In this article we propose a novel approach to fully exploit the DMA-based communication mechanisms of the Cell/B.E. to provide an unprecedented level of aggregate performance with irregular access patterns. We have discovered that memory congestion plays a crucial role in determining the performance of this algorithm. We discuss three aspects of congestion: memory pressure, layout issues and hot spots, and we present a collection of algorithmic solutions to alleviate these problems and achieve quasi-optimal performance. The implementation of our algorithm provides a worst- case throughput of 2.5 Gbps, and a typical throughput between 3.3 and 4.4 Gbps, measured on realistic scenarios with a two-processor Cell/B.E. system.","1530-2075;15302075","978-1-4244-1693-6;9781424416936","978-1-4244-1694-3;9781424416943","10.1109/IPDPS.2008.4536300","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4536300","","Aggregates;Computer architecture;Dictionaries;Digital filters;Explosions;Intrusion detection;Power system modeling;Protection;Search engines;Throughput","multiprocessing systems;string matching;text analysis","Aho-Corasick;Cell/B.E. processor;exact string matching;high-speed string searching;hot spots;irregular access patterns;large dictionaries;layout issues;memory congestion;memory pressure;multicore architecture","","8","1","19","","","14-18 April 2008","","IEEE","IEEE Conference Publications"
"A Survey on the Application of FPGAs for Network Infrastructure Security","H. Chen; Y. Chen; D. H. Summerville","Dept. of Electrical & Computer Eng., State University of New York (SUNY) &#x2014; Binghamton, Binghamton, NY 13902","IEEE Communications Surveys & Tutorials","20111103","2011","13","4","541","561","Given the rapid evolution of attack methods and toolkits, software-based solutions to secure the network infrastructure have become overburdened. The performance gap between the execution speed of security software and the amount of data to be processed is ever widening. A common solution to close this performance gap is through hardware implementation of security functions. Possessing the flexibility of software and high parallelism of hardware, reconfigurable hardware devices, such as Field Programmable Gate Arrays (FPGAs), have become increasingly popular for this purpose. FPGAs support the performance demands of security operations as well as enable architectural and algorithm innovations in the future. This paper presents a survey of the state-of-art in FPGA-based implementations that have been used in the network infrastructure security area, categorizing currently existing diverse implementations. Combining brief descriptions with intensive case-studies, we hope this survey will inspire more active research in this area.","1553-877X;1553877X","","","10.1109/SURV.2011.072210.00075","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5556740","FPGA;Hardware-based Application;Network Infrastructure Security;Network Security","Computer crime;Field programmable gate arrays;Internet;Network security;Protocols","Internet;computer network security;field programmable gate arrays","FPGA;Internet;field programmable gate arrays;network infrastructure security;reconfigurable hardware devices;security software;software-based solutions","","14","","118","","2010-08-23","Fourth Quarter 2011","","IEEE","IEEE Journals & Magazines"
"PeRex: A Power Efficient FPGA-based Architecture for Regular Expression Matching","Y. Wen; X. Tang; L. Ju; T. Chen","Coll. of Comput. Sci. & Technol., Zhejiang Univ., Hangzhou, China","Green Computing and Communications (GreenCom), 2011 IEEE/ACM International Conference on","20111027","2011","","","188","193","Regular expression is an important approach which is widely used in string pattern matching. And in many pragmatic applications string pattern matching is the most compute intensive task which takes majority processing time, therefore, in order to improve system efficiency many works have been done around hardware implementation of regular expression matching. However, the traditional design approaches pay more attention on the implementation methods as well as their efficiency than the power consumption. In this paper we provide a power efficient regular expression matching architecture (PeRex). By taking full use of both rising and trailing edges of the system clocks such architecture is able to match two characters in a single system cycle. So, by maintaining the high performance and throughput the architecture in this paper is able to work in a lower clock frequency, consequently it will decrease the dynamic power consumption remarkably. Analyzed by XPower, which offered by Xilinx Inc., our approach is able to save dynamic power consumption by1.7 times comparing to traditional approaches on Virtex-V XC5VLX30 FPGA device.","","978-1-4577-1006-3;9781457710063","978-0-7695-4466-3;9780769544663","10.1109/GreenCom.2011.39","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6061325","FPGA;NFA;power efficient accelerator;regular expression matching","Clocks;Computer architecture;Hardware;Logic gates;Pattern matching;Radiation detectors;Random access memory","field programmable gate arrays;string matching","PeRex;Virtex-V XC5VLX30 FPGA device;XPower;Xilinx Inc;dynamic power consumption;power efficient FPGA-based architecture;power efficient regular expression matching architecture;string pattern matching","","2","","19","","","4-5 Aug. 2011","","IEEE","IEEE Conference Publications"
"Accelerating DFA Construction by Hierarchical Merging","Y. Liu; L. Guo; M. Guo; P. Liu","Inst. of Comput. Technol., Chinese Acad. of Sci., Beijing, China","2011 IEEE Ninth International Symposium on Parallel and Distributed Processing with Applications","20110714","2011","","","1","6","Regular expression matching is widely used in many network applications to analyze suspicious traffic against predefined signatures, and to discover anomalous events. Deterministic Finite Automaton (DFA), which recognizes a set of regular expressions, is the basic data structure to scan input traffic byte by byte. Though DFA meets the requirement of real-time processing of network traffic, constructing a combined DFA for a set of regular expression signatures is very time-consuming, especially when the signature set is large. To attack this problem, we propose new strategies to accelerate DFA construction. The basic idea of our method is to construct the combined DFA by hierarchical merging of the DFAs of each single regular expression. Our method runs in O(|Q||Σ| In n) time, which is substantially superior to the time complexity O(|Q||Σ|(Σ<sub>i=1</sub><sup>n</sup>|Qi|)<sup>2</sup>) of classical subset construction algorithm. Experiment on real signatures from open-source systems, such as L7-filter, BRO and SNORT, demonstrates that our method performs 45 times faster than the subset construction algorithm on average.","2158-9178;21589178","978-1-4577-0391-1;9781457703911","978-0-7695-4428-1;9780769544281","10.1109/ISPA.2011.32","http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=5951873","","Acceleration;Automata;Complexity theory;Data structures;Doped fiber amplifiers;Merging;Open source software","computational complexity;data structures;deterministic automata;digital signatures;finite automata;public domain software;security of data","BRO;L7-filter;SNORT;anomalous events discovery;data structure;deterministic finite automaton construction;hierarchical merging;open-source system;predefined signatures;regular expression matching;subset construction algorithm;suspicious traffic analysis;time complexity","","3","","11","","","26-28 May 2011","","IEEE","IEEE Conference Publications"
